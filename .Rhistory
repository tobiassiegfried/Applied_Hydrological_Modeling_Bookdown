annotate('text',x=12,y=43,"Shakdara River")
# Used for subbasins naming
subbasins <- # just put everything in a regular dataframe
tibble(basin=c("Shakhdara","Gunt","Alishur","Tokusbulak"),
lat   = c(37.3,37.8,37.6,37.7),
lon   = c(72.0,72.0,72.6,73.25))
# Plotting
ggplot() +
geom_tile(data=gunt_DEM_df, aes(x=x, y=y, fill=value), alpha=0.8) +
geom_sf(data=gunt_subbasins_shp_utm,color="black",fill=NA,linetype="11",size=0.25) +
geom_sf(data=gunt_rivers_shp_utm,color="blue",fill=NA) +
geom_sf(data=gunt_elBands_shp_utm,color="black",fill=NA,linetype="11",size=.2) +
geom_sf(data=gunt_subbasin_junctions_shp_utm,color="red",fill="red") +
scale_fill_gradientn(colours = terrain.colors(100)) +
xlab("Longitude") + ylab("Latitude") +
guides(fill=guide_legend(title="Alt. [masl]")) +
ggtitle("Gunt Catchment Overview") +
geom_text(data = subbasins,aes(x = lon, y = lat, label = basin),vjust = -.3,hjust = -.2)
subbasins_cord_latlon = SpatialPoints(cbind(subbasins$lon, subbasins$lat), proj4string=CRS("+proj=longlat"))
subbasins_cord_latlon
subbasins_cord_UTM <- spTransform(subbasins_cord_latlon, CRS("+init=epsg:32642"))
subbasins_cord_UTM
subbasins_cord_UTM %>% coord_sf()
subbasins_cord_UTM %>% coords()
subbasins_cord_UTM %>% coordinates()
subbasins
# Used for subbasins naming
subbasins <- # just put everything in a regular dataframe
tibble(basin=c("Shakhdara","Gunt","Alishur","Tokusbulak"),
lat   = c(37.3,37.8,37.6,37.7),
lon   = c(72.0,72.0,72.6,73.25))
subbasins_coord_latlon = SpatialPoints(cbind(subbasins$lon, subbasins$lat), proj4string=CRS("+proj=longlat"))
subbasins_coord_UTM <- spTransform(subbasins_cord_latlon, CRS("+init=epsg:32642")) %>% coordinates() %>% rename(lat=coords.x1,lon=coords.x2)
subbasins_coord_UTM <- spTransform(subbasins_cord_latlon, CRS("+init=epsg:32642")) %>%
coordinates() %>% as_tibble() %>%
rename(lat=coords.x1,lon=coords.x2)
subbasins <- bind_cols(subbasins,subbasins_cord_UTM)
subbasins <- bind_cols(subbasins,subbasins_coord_UTM)
subbasins
# Used for subbasins naming
subbasins <- # just put everything in a regular dataframe
tibble(basin=c("Shakhdara","Gunt","Alishur","Tokusbulak"),
lat   = c(37.3,37.8,37.6,37.7),
lon   = c(72.0,72.0,72.6,73.25))
subbasins_coord_latlon = SpatialPoints(cbind(subbasins$lon, subbasins$lat), proj4string=CRS("+proj=longlat"))
subbasins_coord_UTM <- spTransform(subbasins_cord_latlon, CRS("+init=epsg:32642")) %>%
coordinates() %>% as_tibble() %>%
rename(y=coords.x1,x=coords.x2)
subbasins <- bind_cols(subbasins,subbasins_coord_UTM)
subbasins
# Plotting
ggplot() +
geom_tile(data=gunt_DEM_df, aes(x=x, y=y, fill=value), alpha=0.8) +
geom_sf(data=gunt_subbasins_shp_utm,color="black",fill=NA,linetype="11",size=0.25) +
geom_sf(data=gunt_rivers_shp_utm,color="blue",fill=NA) +
geom_sf(data=gunt_elBands_shp_utm,color="black",fill=NA,linetype="11",size=.2) +
geom_sf(data=gunt_subbasin_junctions_shp_utm,color="red",fill="red") +
scale_fill_gradientn(colours = terrain.colors(100)) +
xlab("Longitude") + ylab("Latitude") +
guides(fill=guide_legend(title="Alt. [masl]")) +
ggtitle("Gunt Catchment Overview") +
geom_text(data = subbasins,aes(x = x, y = y, label = basin),vjust = -.3,hjust = -.2)
# Used for subbasins naming
subbasins <- # just put everything in a regular dataframe
tibble(basin=c("Shakhdara","Gunt","Alishur","Tokusbulak"),
lat   = c(37.3,37.8,37.6,37.7),
lon   = c(72.0,72.0,72.6,73.25))
subbasins_coord_latlon = SpatialPoints(cbind(subbasins$lon, subbasins$lat), proj4string=CRS("+proj=longlat"))
subbasins_coord_UTM <- spTransform(subbasins_cord_latlon, CRS("+init=epsg:32642")) %>%
coordinates() %>% as_tibble() %>%
rename(x=coords.x1,y=coords.x2)
subbasins <- bind_cols(subbasins,subbasins_coord_UTM)
# Plotting
ggplot() +
geom_tile(data=gunt_DEM_df, aes(x=x, y=y, fill=value), alpha=0.8) +
geom_sf(data=gunt_subbasins_shp_utm,color="black",fill=NA,linetype="11",size=0.25) +
geom_sf(data=gunt_rivers_shp_utm,color="blue",fill=NA) +
geom_sf(data=gunt_elBands_shp_utm,color="black",fill=NA,linetype="11",size=.2) +
geom_sf(data=gunt_subbasin_junctions_shp_utm,color="red",fill="red") +
scale_fill_gradientn(colours = terrain.colors(100)) +
xlab("Longitude") + ylab("Latitude") +
guides(fill=guide_legend(title="Alt. [masl]")) +
ggtitle("Gunt Catchment Overview") +
geom_text(data = subbasins,aes(x = x, y = y, label = basin),vjust = -.3,hjust = -.2)
# Plotting
ggplot() +
geom_tile(data=gunt_DEM_df, aes(x=x, y=y, fill=value), alpha=0.8) +
geom_sf(data=gunt_subbasins_shp_utm,color="black",fill=NA,linetype="11",size=0.25) +
geom_sf(data=gunt_rivers_shp_utm,color="blue",fill=NA) +
geom_sf(data=gunt_elBands_shp_utm,color="black",fill=NA,linetype="11",size=.2) +
geom_sf(data=gunt_subbasin_junctions_shp_utm,color="red",fill="red") +
scale_fill_gradientn(colours = terrain.colors(100)) +
xlab("Longitude") + ylab("Latitude") +
guides(fill=guide_legend(title="Alt. [masl]")) +
ggtitle("Gunt Catchment Overview") +
geom_label(data = subbasins,aes(x = x, y = y, label = basin),vjust = -.3,hjust = -.2)
# Plotting
ggplot() +
geom_tile(data=gunt_DEM_df, aes(x=x, y=y, fill=value), alpha=0.8) +
geom_sf(data=gunt_subbasins_shp_utm,color="black",fill=NA,linetype="11",size=0.25) +
geom_sf(data=gunt_rivers_shp_utm,color="blue",fill=NA) +
geom_sf(data=gunt_elBands_shp_utm,color="black",fill=NA,linetype="11",size=.2) +
geom_sf(data=gunt_subbasin_junctions_shp_utm,color="red",fill="red") +
scale_fill_gradientn(colours = terrain.colors(100)) +
xlab("Longitude") + ylab("Latitude") +
guides(fill=guide_legend(title="Alt. [masl]")) +
ggtitle("Gunt Catchment Overview") +
geom_label(data = subbasins,aes(x = x, y = y, label = basin),vjust = 0,hjust = 0)
?st_read
# Load data
fPath <- './data/AmuDarya/Gunt'
gunt_DEM <- raster(paste0(fPath,'/GIS/17050_Gund_Basin_DEM.tif'))
gunt_elBands_shp_utm <- st_read(paste0(fPath,'/GIS/Gunt_ElevationBands_Subbasins_RSMinerve.shp'),quiet=TRUE)
gunt_subbasins_shp_utm <- st_read(paste0(fPath,'/GIS/Gunt_Subbasins_RSMinerve.shp'),quiet=TRUE)
gunt_subbasin_junctions_shp_utm <- st_read(paste0(fPath,'/GIS/Gunt_Junctions_RSMinerve.shp'),quiet=TRUE)
gunt_rivers_shp_utm <- st_read(paste0(fPath,'/GIS/Gunt_Rivers_RSMinerve.shp'),quiet=TRUE)
# Downsample DEM and create hillshade
gunt_DEM_lr <- raster::aggregate(gunt_DEM,fact=10) # this is in UTM 42N
gunt_slope <- terrain(gunt_DEM_lr, opt='slope')
gunt_aspect <- terrain(gunt_DEM_lr, opt='aspect')
gunt_DEM_hillshade <- hillShade(gunt_slope, gunt_aspect, 40, 270)
# Convert to dataframe for ggplotting
gunt_DEM_spdf <- as(gunt_DEM_lr, "SpatialPixelsDataFrame")
gunt_DEM_df <- as.data.frame(gunt_DEM_spdf)
colnames(gunt_DEM_df) <- c("value", "x", "y")
hillshade_Gunt_spdf <- as(gunt_DEM_hillshade, "SpatialPixelsDataFrame")
hillshade_Gunt_df <- as.data.frame(hillshade_Gunt_spdf)
colnames(hillshade_Gunt_df) <- c("value", "x", "y")
# Used for subbasins naming
subbasins <- # just put everything in a regular dataframe
tibble(basin=c("Shakhdara","Gunt","Tokusbulak","Alishur"),
lat   = c(37.3,37.8,37.6,37.7),
lon   = c(72.0,71.8,72.6,73.25))
subbasins_coord_latlon = SpatialPoints(cbind(subbasins$lon, subbasins$lat), proj4string=CRS("+proj=longlat"))
subbasins_coord_UTM <- spTransform(subbasins_coord_latlon, CRS("+init=epsg:32642")) %>%
coordinates() %>% as_tibble() %>%
rename(x=coords.x1,y=coords.x2)
subbasins <- bind_cols(subbasins,subbasins_coord_UTM)
# Plotting
ggplot() +
geom_tile(data=gunt_DEM_df, aes(x=x, y=y, fill=value), alpha=0.8) +
geom_sf(data=gunt_subbasins_shp_utm,color="black",fill=NA,linetype="11",size=0.25) +
geom_sf(data=gunt_rivers_shp_utm,color="blue",fill=NA) +
geom_sf(data=gunt_elBands_shp_utm,color="black",fill=NA,linetype="11",size=.2) +
geom_sf(data=gunt_subbasin_junctions_shp_utm,color="red",fill="red") +
scale_fill_gradientn(colours = terrain.colors(100)) +
xlab("Longitude") + ylab("Latitude") +
guides(fill=guide_legend(title="Alt. [masl]")) +
ggtitle("Gunt Catchment Overview") +
geom_label(data = subbasins,aes(x = x, y = y, label = basin),vjust = 0,hjust = 0)
# Load data
fPath <- './data/AmuDarya/Gunt'
gunt_DEM <- raster(paste0(fPath,'/GIS/17050_Gund_Basin_DEM.tif'))
gunt_elBands_shp_utm <- st_read(paste0(fPath,'/GIS/Gunt_ElevationBands_Subbasins_RSMinerve.shp'),quiet=TRUE)
gunt_subbasins_shp_utm <- st_read(paste0(fPath,'/GIS/Gunt_Subbasins_RSMinerve.shp'),quiet=TRUE)
gunt_subbasin_junctions_shp_utm <- st_read(paste0(fPath,'/GIS/Gunt_Junctions_RSMinerve.shp'),quiet=TRUE)
gunt_rivers_shp_utm <- st_read(paste0(fPath,'/GIS/Gunt_Rivers_RSMinerve.shp'),quiet=TRUE)
# Downsample DEM and create hillshade
gunt_DEM_lr <- raster::aggregate(gunt_DEM,fact=10) # this is in UTM 42N
gunt_slope <- terrain(gunt_DEM_lr, opt='slope')
gunt_aspect <- terrain(gunt_DEM_lr, opt='aspect')
gunt_DEM_hillshade <- hillShade(gunt_slope, gunt_aspect, 40, 270)
# Convert to dataframe for ggplotting
gunt_DEM_spdf <- as(gunt_DEM_lr, "SpatialPixelsDataFrame")
gunt_DEM_df <- as.data.frame(gunt_DEM_spdf)
colnames(gunt_DEM_df) <- c("value", "x", "y")
hillshade_Gunt_spdf <- as(gunt_DEM_hillshade, "SpatialPixelsDataFrame")
hillshade_Gunt_df <- as.data.frame(hillshade_Gunt_spdf)
colnames(hillshade_Gunt_df) <- c("value", "x", "y")
# Used for subbasins naming
subbasins <- # just put everything in a regular dataframe
tibble(basin=c("Shakhdara","Gunt","Tokusbulak","Alishur"),
lat   = c(37.4,37.75,37.6,37.65),
lon   = c(72.0,71.8,72.6,73.25))
subbasins_coord_latlon = SpatialPoints(cbind(subbasins$lon, subbasins$lat), proj4string=CRS("+proj=longlat"))
subbasins_coord_UTM <- spTransform(subbasins_coord_latlon, CRS("+init=epsg:32642")) %>%
coordinates() %>% as_tibble() %>%
rename(x=coords.x1,y=coords.x2)
subbasins <- bind_cols(subbasins,subbasins_coord_UTM)
# Plotting
ggplot() +
geom_tile(data=gunt_DEM_df, aes(x=x, y=y, fill=value), alpha=0.8) +
geom_sf(data=gunt_subbasins_shp_utm,color="black",fill=NA,linetype="11",size=0.25) +
geom_sf(data=gunt_rivers_shp_utm,color="blue",fill=NA) +
geom_sf(data=gunt_elBands_shp_utm,color="black",fill=NA,linetype="11",size=.2) +
geom_sf(data=gunt_subbasin_junctions_shp_utm,color="red",fill="red") +
scale_fill_gradientn(colours = terrain.colors(100)) +
xlab("Longitude") + ylab("Latitude") +
guides(fill=guide_legend(title="Alt. [masl]")) +
ggtitle("Gunt Catchment Overview") +
geom_label(data = subbasins,aes(x = x, y = y, label = basin),vjust = 0,hjust = 0)
```{r,results=FALSE}
# Loading required packages
## Tidy data wrangling
library(tidyverse)
# Loading required packages
## Tidy data wrangling
library(tidyverse)
library(here)
library(timetk)
library(tidymodels)
library(lubridate)
library(timetk)
## riversCentralAsia Package
library('riversCentralAsia')
## Spatial data processing
library(ncdf4)
library(raster)
library(rgdal)
library(sf)
library(smoothr)
library(units)
# view meta data summary of the subbasins file
gunt_elBands_shp_utm
#  view meta data summary of the junctions file
gunt_subbasin_junctions_shp_utm
# view meta data summary of the rivers file
gunt_rivers_shp_utm
# this is just to correct the shapefile and store it. the block can be deleted later.
gunt_subbasin_junctions_shp_utm_corr <- gunt_subbasin_junctions_shp_utm %>% select(-ModelGuid)
gunt_subbasin_junctions_shp_utm_corr
#  view meta data summary of the junctions file
gunt_subbasin_junctions_shp_utm
# this is just to correct the shapefile and store it. the block can be deleted later.
gunt_subbasin_junctions_shp_utm_corr <- gunt_subbasin_junctions_shp_utm %>% select(-ModelGuid)
gunt_subbasin_junctions_shp_utm_corr$name[1] <- 'junct_2'
gunt_subbasin_junctions_shp_utm_corr$name[1] <- 'junct_3'
gunt_subbasin_junctions_shp_utm_corr$name[1] <- 'junct_1'
gunt_subbasin_junctions_shp_utm_corr
#  view meta data summary of the junctions file
gunt_subbasin_junctions_shp_utm
# this is just to correct the shapefile and store it. the block can be deleted later.
gunt_subbasin_junctions_shp_utm_corr <- gunt_subbasin_junctions_shp_utm %>% select(-ModelGuid)
gunt_subbasin_junctions_shp_utm_corr$name[1] <- 'junct_2'
gunt_subbasin_junctions_shp_utm_corr$name[2] <- 'junct_3'
gunt_subbasin_junctions_shp_utm_corr$name[3] <- 'junct_1'
gunt_subbasin_junctions_shp_utm_corr
# this is just to correct the shapefile and store it. the block can be deleted later.
gunt_rivers_shp_utm_cor <- gunt_rivers_shp_utm %>% dplyr::select(-ModelGuid)
# view meta data summary of the rivers file
gunt_rivers_shp_utm
# view meta data summary of the rivers file
gunt_rivers_shp_utm
# this is just to correct the shapefile and store it. the block can be deleted later.
gunt_rivers_shp_utm_cor <- gunt_rivers_shp_utm %>% dplyr::select(-ModelGuid)
gunt_rivers_shp_utm_cor$name[1] <- 'shakhdara'
gunt_rivers_shp_utm_cor$name[2] <- 'gunt_ds'
gunt_rivers_shp_utm_cor$name[3] <- 'tokusbulak'
gunt_rivers_shp_utm_cor$name[4] <- 'alishur'
gunt_rivers_shp_utm_cor$name[5] <- 'gunt_us'
# view meta data summary of the rivers file
gunt_rivers_shp_utm
# this is just to correct the shapefile and store it. the block can be deleted later.
gunt_rivers_shp_utm_cor <- gunt_rivers_shp_utm %>% dplyr::select(-ModelGuid)
gunt_rivers_shp_utm_cor$name[1] <- 'shakhdara'
gunt_rivers_shp_utm_cor$name[2] <- 'gunt_ds'
gunt_rivers_shp_utm_cor$name[3] <- 'tokusbulak'
gunt_rivers_shp_utm_cor$name[4] <- 'alishur'
gunt_rivers_shp_utm_cor$name[5] <- 'gunt_us'
gunt_rivers_shp_utm_cor
#  view meta data summary of the junctions file
#gunt_subbasin_junctions_shp_utm
# this is just to correct the shapefile and store it. the block can be deleted later.
gunt_subbasin_junctions_shp_utm_corr <- gunt_subbasin_junctions_shp_utm %>% dplyr::select(-ModelGuid)
gunt_subbasin_junctions_shp_utm_corr$name[1] <- 'junct_2'
gunt_subbasin_junctions_shp_utm_corr$name[2] <- 'junct_3'
gunt_subbasin_junctions_shp_utm_corr$name[3] <- 'junct_1'
gunt_subbasin_junctions_shp_utm_corr
#  view meta data summary of the junctions file
#gunt_subbasin_junctions_shp_utm
# this is just to correct the shapefile and store it. the block can be deleted later.
gunt_subbasin_junctions_shp_utm_corr <- gunt_subbasin_junctions_shp_utm %>% dplyr::select(-ModelGuid)
gunt_subbasin_junctions_shp_utm_corr$name[1] <- 'junct_2'
gunt_subbasin_junctions_shp_utm_corr$name[2] <- 'junct_3'
gunt_subbasin_junctions_shp_utm_corr$name[3] <- 'junct_1'
gunt_subbasin_junctions_shp_utm_corr$river_down[1] <- 'gunt_ds'
gunt_subbasin_junctions_shp_utm_corr$river_down[2] <- 'gunt_us'
gunt_subbasin_junctions_shp_utm_corr
#  view meta data summary of the junctions file
#gunt_subbasin_junctions_shp_utm
# this is just to correct the shapefile and store it. the block can be deleted later.
gunt_subbasin_junctions_shp_utm_corr <- gunt_subbasin_junctions_shp_utm %>% dplyr::select(-ModelGuid)
gunt_subbasin_junctions_shp_utm_corr$name[1] <- 'junct_2'
gunt_subbasin_junctions_shp_utm_corr$name[2] <- 'junct_3'
gunt_subbasin_junctions_shp_utm_corr$name[3] <- 'junct_1'
gunt_subbasin_junctions_shp_utm_corr$river_down[1] <- 'gunt_ds'
gunt_subbasin_junctions_shp_utm_corr$river_down[3] <- 'gunt_us'
gunt_subbasin_junctions_shp_utm_corr
# view meta data summary of the rivers file
#gunt_rivers_shp_utm
# this is just to correct the shapefile and store it. the block can be deleted later.
gunt_rivers_shp_utm_cor <- gunt_rivers_shp_utm %>% dplyr::select(-ModelGuid)
gunt_rivers_shp_utm_cor$name[1] <- 'shakhdara'
gunt_rivers_shp_utm_cor$name[2] <- 'gunt_ds'
gunt_rivers_shp_utm_cor$name[3] <- 'tokusbulak'
gunt_rivers_shp_utm_cor$name[4] <- 'alishur'
gunt_rivers_shp_utm_cor$name[5] <- 'gunt_us'
gunt_rivers_shp_utm_cor
# view meta data summary of the subbasins file
gunt_elBands_shp_utm <- sf::st_read(paste0(fPath,'/GIS/Gunt_ElevationBands_Subbasins_RSMinerve.shp'),quiet=TRUE)
gunt_elBands_shp_utm
# view meta data summary of the subbasins file
gunt_elBands_shp_utm <- sf::st_read(paste0(fPath,'/GIS/Gunt_ElevationBands_Subbasins_RSMinerve.shp'),quiet=TRUE)
gunt_elBands_shp_utm_corr <- gunt_elBands_shp_utm %>% dplyr::select(-ModelGuid)
gunt_elBands_shp_utm_corr
# view meta data summary of the subbasins file
gunt_elBands_shp_utm <- sf::st_read(paste0(fPath,'/GIS/Gunt_ElevationBands_Subbasins_RSMinerve.shp'),quiet=TRUE)
gunt_elBands_shp_utm_corr <- gunt_elBands_shp_utm %>% dplyr::select(-ModelGuid)
gunt_elBands_shp_utm_corr
sf::st_write(gunt_elBands_shp_utm_corr,paste0(fPath,'/Gunt_ElevationBands_Subbasins_RSMinerve.shp'),append=FALSE)
# view meta data summary of the subbasins file
gunt_elBands_shp_utm <- sf::st_read(paste0(fPath,'/GIS/Gunt_ElevationBands_Subbasins_RSMinerve.shp'),quiet=TRUE)
gunt_elBands_shp_utm_corr <- gunt_elBands_shp_utm %>% dplyr::select(-ModelGuid)
gunt_elBands_shp_utm_corr
sf::st_write(gunt_elBands_shp_utm_corr,paste0(fPath,'/Gunt_ElevationBands_Subbasins_RSMinerve.shp'),append=FALSE)
#  view meta data summary of the junctions file
gunt_subbasin_junctions_shp_utm <- sf::st_read(paste0(fPath,'/GIS/Gunt_Junctions_RSMinerve.shp'),quiet=TRUE)
gunt_subbasin_junctions_shp_utm
# this is just to correct the shapefile and store it. the block can be deleted later.
gunt_subbasin_junctions_shp_utm_corr <- gunt_subbasin_junctions_shp_utm %>% dplyr::select(-ModelGuid)
gunt_subbasin_junctions_shp_utm_corr$name[1] <- 'junct_2'
gunt_subbasin_junctions_shp_utm_corr$name[2] <- 'junct_3'
gunt_subbasin_junctions_shp_utm_corr$name[3] <- 'junct_1'
gunt_subbasin_junctions_shp_utm_corr$river_down[1] <- 'gunt_ds'
gunt_subbasin_junctions_shp_utm_corr$river_down[3] <- 'gunt_us'
gunt_subbasin_junctions_shp_utm_corr
sf::st_write(gunt_subbasin_junctions_shp_utm_corr,paste0(fPath,'/Gunt_Junctions_RSMinerve.shp'),append=FALSE)
#  view meta data summary of the junctions file
gunt_subbasin_junctions_shp_utm <- sf::st_read(paste0(fPath,'/GIS/Gunt_Junctions_RSMinerve.shp'),quiet=TRUE)
gunt_subbasin_junctions_shp_utm
# this is just to correct the shapefile and store it. the block can be deleted later.
gunt_subbasin_junctions_shp_utm_corr <- gunt_subbasin_junctions_shp_utm %>% dplyr::select(-ModelGuid)
gunt_subbasin_junctions_shp_utm_corr$name[1] <- 'junct_2'
gunt_subbasin_junctions_shp_utm_corr$name[2] <- 'junct_3'
gunt_subbasin_junctions_shp_utm_corr$name[3] <- 'junct_1'
gunt_subbasin_junctions_shp_utm_corr$river_down[1] <- 'gunt_ds'
gunt_subbasin_junctions_shp_utm_corr$river_down[3] <- 'gunt_us'
gunt_subbasin_junctions_shp_utm_corr
sf::st_write(gunt_subbasin_junctions_shp_utm_corr,paste0(fPath,'/Gunt_Junctions_RSMinerve.shp'),append=FALSE)
#  view meta data summary of the junctions file
gunt_subbasin_junctions_shp_utm <- sf::st_read(paste0(fPath,'/GIS/Gunt_Junctions_RSMinerve.shp'),quiet=TRUE)
gunt_subbasin_junctions_shp_utm
# view meta data summary of the subbasins file
gunt_elBands_shp_utm <- sf::st_read(paste0(fPath,'/GIS/Gunt_ElevationBands_Subbasins_RSMinerve.shp'),quiet=TRUE)
gunt_elBands_shp_utm_corr <- gunt_elBands_shp_utm %>% dplyr::select(-ModelGuid)
gunt_elBands_shp_utm_corr
sf::st_write(gunt_elBands_shp_utm_corr,paste0(fPath,'/GIS/Gunt_ElevationBands_Subbasins_RSMinerve.shp'),append=FALSE)
# view meta data summary of the subbasins file
gunt_elBands_shp_utm <- sf::st_read(paste0(fPath,'/GIS/Gunt_ElevationBands_Subbasins_RSMinerve.shp'),quiet=TRUE)
gunt_elBands_shp_utm_corr <- gunt_elBands_shp_utm %>% dplyr::select(-ModelGuid)
# view meta data summary of the subbasins file
gunt_elBands_shp_utm <- sf::st_read(paste0(fPath,'/GIS/Gunt_ElevationBands_Subbasins_RSMinerve.shp'),quiet=TRUE)
gunt_elBands_shp_utm
#  view meta data summary of the junctions file
gunt_subbasin_junctions_shp_utm <- sf::st_read(paste0(fPath,'/GIS/Gunt_Junctions_RSMinerve.shp'),quiet=TRUE)
gunt_subbasin_junctions_shp_utm
# this is just to correct the shapefile and store it. the block can be deleted later.
gunt_subbasin_junctions_shp_utm_corr <- gunt_subbasin_junctions_shp_utm %>% dplyr::select(-ModelGuid)
gunt_subbasin_junctions_shp_utm_corr$name[1] <- 'junct_2'
gunt_subbasin_junctions_shp_utm_corr$name[2] <- 'junct_3'
gunt_subbasin_junctions_shp_utm_corr$name[3] <- 'junct_1'
gunt_subbasin_junctions_shp_utm_corr$river_down[1] <- 'gunt_ds'
gunt_subbasin_junctions_shp_utm_corr$river_down[3] <- 'gunt_us'
gunt_subbasin_junctions_shp_utm_corr
sf::st_write(gunt_subbasin_junctions_shp_utm_corr,paste0(fPath,'/GIS/Gunt_Junctions_RSMinerve.shp'),append=FALSE)
#  view meta data summary of the junctions file
gunt_subbasin_junctions_shp_utm <- sf::st_read(paste0(fPath,'/GIS/Gunt_Junctions_RSMinerve.shp'),quiet=TRUE)
gunt_subbasin_junctions_shp_utm
# this is just to correct the shapefile and store it. the block can be deleted later.
gunt_subbasin_junctions_shp_utm_corr <- gunt_subbasin_junctions_shp_utm %>% dplyr::select(-ModelGuid)
# view meta data summary of the rivers file
gunt_rivers_shp_utm <- st_read(paste0(fPath,'/GIS/Gunt_Rivers_RSMinerve.shp'),quiet=TRUE)
gunt_rivers_shp_utm
# this is just to correct the shapefile and store it. the block can be deleted later.
gunt_rivers_shp_utm_cor <- gunt_rivers_shp_utm %>% dplyr::select(-ModelGuid)
gunt_rivers_shp_utm_cor$name[1] <- 'shakhdara'
gunt_rivers_shp_utm_cor$name[2] <- 'gunt_ds'
gunt_rivers_shp_utm_cor$name[3] <- 'tokusbulak'
gunt_rivers_shp_utm_cor$name[4] <- 'alishur'
gunt_rivers_shp_utm_cor$name[5] <- 'gunt_us'
gunt_rivers_shp_utm_cor
sf::st_write(gunt_rivers_shp_utm_cor,paste0(fPath,'/GIS/Gunt_Rivers_RSMinerve.shp'),append=FALSE)
# view meta data summary of the rivers file
gunt_rivers_shp_utm <- st_read(paste0(fPath,'/GIS/Gunt_Rivers_RSMinerve.shp'),quiet=TRUE)
gunt_rivers_shp_utm
# this is just to correct the shapefile and store it. the block can be deleted later.
gunt_rivers_shp_utm_cor <- gunt_rivers_shp_utm %>% dplyr::select(-ModelGuid)
#  view meta data summary of the junctions file
gunt_subbasin_junctions_shp_utm <- sf::st_read(paste0(fPath,'/GIS/Gunt_Junctions_RSMinerve.shp'),quiet=TRUE)
gunt_subbasin_junctions_shp_utm
# this is just to correct the shapefile and store it. the block can be deleted later.
# gunt_subbasin_junctions_shp_utm_corr <- gunt_subbasin_junctions_shp_utm %>% dplyr::select(-ModelGuid)
# gunt_subbasin_junctions_shp_utm_corr$name[1] <- 'junct_2'
# gunt_subbasin_junctions_shp_utm_corr$name[2] <- 'junct_3'
# gunt_subbasin_junctions_shp_utm_corr$name[3] <- 'junct_1'
# gunt_subbasin_junctions_shp_utm_corr$river_down[1] <- 'gunt_ds'
# gunt_subbasin_junctions_shp_utm_corr$river_down[3] <- 'gunt_us'
# gunt_subbasin_junctions_shp_utm_corr
# sf::st_write(gunt_subbasin_junctions_shp_utm_corr,paste0(fPath,'/GIS/Gunt_Junctions_RSMinerve.shp'),append=FALSE)
# view meta data summary of the rivers file
gunt_rivers_shp_utm <- st_read(paste0(fPath,'/GIS/Gunt_Rivers_RSMinerve.shp'),quiet=TRUE)
gunt_rivers_shp_utm
# this is just to correct the shapefile and store it. the block can be deleted later.
# gunt_rivers_shp_utm_cor <- gunt_rivers_shp_utm %>% dplyr::select(-ModelGuid)
# gunt_rivers_shp_utm_cor$name[1] <- 'shakhdara'
# gunt_rivers_shp_utm_cor$name[2] <- 'gunt_ds'
# gunt_rivers_shp_utm_cor$name[3] <- 'tokusbulak'
# gunt_rivers_shp_utm_cor$name[4] <- 'alishur'
# gunt_rivers_shp_utm_cor$name[5] <- 'gunt_us'
# gunt_rivers_shp_utm_cor
# sf::st_write(gunt_rivers_shp_utm_cor,paste0(fPath,'/GIS/Gunt_Rivers_RSMinerve.shp'),append=FALSE)
data <- ChirchikRiverBasin
data %>%
filter(type=='Q') %>%
group_by(type,code,station,resolution) %>%
plot_time_series(date,
data,
.facet_ncol      = 2,
.interactive     = FALSE,
.smooth          = FALSE,
.title           = '')
# Load data records
fPath = fPath <- './data/AmuDarya/Gunt'
fName = '/StationData/gunt_data_cleaned.Rds'
data <- read_rds(paste0(fPath,fName))
data
q_17050_mon <- data %>% filter(type == "Q" & code == '17050' & resolution == 'mon')
q_17050_mon
q_17050_mon %>% plot_time_series(date,
data,
.smooth      = TRUE,
.interactive = FALSE,
.title       = 'Monthly Discharge Data at Gunt Gauging Station (17050)',
.x_lab       = 'Year',
.y_lab       = 'Mean monthly Q [m3/s]')
q_17050_mon %>% plot_time_series(date,
data,
.smooth      = TRUE,
.interactive = FALSE,
.x_lab       = 'Year',
.y_lab       = 'Mean monthly Q [m3/s]')
q_17050_mon %>% plot_time_series(date,
data,
.smooth      = TRUE,
.interactive = FALSE,
.title       = "",
.x_lab       = 'Year',
.y_lab       = 'Mean monthly Q [m3/s]')
q_17050_mon %>% plot_time_series(date,
data,
.smooth      = TRUE,
.interactive = TRUE,
.title       = "",
.x_lab       = 'Year',
.y_lab       = 'Mean monthly Q [m3/s]')
# Loading required packages
## Tidy data wrangling
library(tidyverse)
library(here)
library(timetk)
library(tidymodels)
library(lubridate)
library(timetk)
## riversCentralAsia Package
library('riversCentralAsia')
## Spatial data processing
library(raster)
library(sf)
# Load data
fPath <- './data/AmuDarya/Gunt'
gunt_DEM <- raster(paste0(fPath,'/GIS/17050_Gund_Basin_DEM.tif'))
gunt_elBands_shp_utm <- st_read(paste0(fPath,'/GIS/Gunt_ElevationBands_Subbasins_RSMinerve.shp'),quiet=TRUE)
gunt_subbasins_shp_utm <- st_read(paste0(fPath,'/GIS/Gunt_Subbasins_RSMinerve.shp'),quiet=TRUE)
gunt_subbasin_junctions_shp_utm <- st_read(paste0(fPath,'/GIS/Gunt_Junctions_RSMinerve.shp'),quiet=TRUE)
gunt_rivers_shp_utm <- st_read(paste0(fPath,'/GIS/Gunt_Rivers_RSMinerve.shp'),quiet=TRUE)
# Downsample DEM and create hillshade
gunt_DEM_lr <- raster::aggregate(gunt_DEM,fact=10) # this is in UTM 42N
gunt_slope <- terrain(gunt_DEM_lr, opt='slope')
gunt_aspect <- terrain(gunt_DEM_lr, opt='aspect')
gunt_DEM_hillshade <- hillShade(gunt_slope, gunt_aspect, 40, 270)
# Convert to dataframe for ggplotting
gunt_DEM_spdf <- as(gunt_DEM_lr, "SpatialPixelsDataFrame")
gunt_DEM_df <- as.data.frame(gunt_DEM_spdf)
colnames(gunt_DEM_df) <- c("value", "x", "y")
hillshade_Gunt_spdf <- as(gunt_DEM_hillshade, "SpatialPixelsDataFrame")
hillshade_Gunt_df <- as.data.frame(hillshade_Gunt_spdf)
colnames(hillshade_Gunt_df) <- c("value", "x", "y")
# Used for subbasins naming
subbasins <- # just put everything in a regular dataframe
tibble(basin=c("Shakhdara","Gunt","Tokusbulak","Alishur"),
lat   = c(37.4,37.75,37.6,37.65),
lon   = c(72.0,71.8,72.6,73.25))
subbasins_coord_latlon = SpatialPoints(cbind(subbasins$lon, subbasins$lat), proj4string=CRS("+proj=longlat"))
subbasins_coord_UTM <- spTransform(subbasins_coord_latlon, CRS("+init=epsg:32642")) %>%
coordinates() %>% as_tibble() %>%
rename(x=coords.x1,y=coords.x2)
subbasins <- bind_cols(subbasins,subbasins_coord_UTM)
# Plotting
ggplot() +
geom_tile(data=gunt_DEM_df, aes(x=x, y=y, fill=value), alpha=0.8) +
geom_sf(data=gunt_subbasins_shp_utm,color="black",fill=NA,linetype="11",size=0.25) +
geom_sf(data=gunt_rivers_shp_utm,color="blue",fill=NA) +
geom_sf(data=gunt_elBands_shp_utm,color="black",fill=NA,linetype="11",size=.2) +
geom_sf(data=gunt_subbasin_junctions_shp_utm,color="red",fill="red") +
scale_fill_gradientn(colours = terrain.colors(100)) +
xlab("Longitude") + ylab("Latitude") +
guides(fill=guide_legend(title="Alt. [masl]")) +
ggtitle("Gunt catchment and subbasins") +
geom_label(data = subbasins,aes(x = x, y = y, label = basin),vjust = 0,hjust = 0)
# view meta data summary of the subbasins file
gunt_elBands_shp_utm <- sf::st_read(paste0(fPath,'/GIS/Gunt_ElevationBands_Subbasins_RSMinerve.shp'),quiet=TRUE)
gunt_elBands_shp_utm
