pacf
pacf[[1]]
pacf[[2]]
pacf[[3]]
pacf[[4]]
pacf[[5]]
pacf[[6]]
pacf <- data_wide_tbl %>%
select(date,Q16290,T38462) %>%
mutate(Q16290 = log1p(Q16290)) %>% select(-date) %>%
forecast::Pacf(lag.max = 100,plot = T)
pacf <- data_wide_tbl %>%
select(date,Q16290,T38462) %>%
tk_ts(start = as.Date('1933-01-10'), frequency = 36) %>%
pacf(lag.max = 100)
pacf <- data_wide_tbl %>%
select(date,Q16290,T38462) %>%
tk_ts(start = as.Date('1933-01-10'), frequency = 36) %>%
pacf(lag.max = 100)
pacf <- data_wide_tbl %>%
select(date,Q16290,T38462) %>%
mutate(Q16290 = log1p(Q16290)) %>%
tk_ts(start = as.Date('1933-01-10'), frequency = 36) %>%
pacf(lag.max = 100)
plot_acf_diagnostics()
?plot_acf_diagnostics()
model_data
model_data <- model_data %>%
mutate(Q_lag2 = lag(Q,2))
model_data
model_data <- model_data %>%
mutate(Q_lag2 = lag(Q,2))
model_data
model_data <- model_data %>%
mutate(Q_lag2 = lag(Q,2)) %>%
mutate(change = Q_lag1 - Q)
model_data
model_data <- model_data %>%
mutate(Q_lag2 = lag(Q,2)) %>%
mutate(change = Q_lag1 -Q_lag2)
model_data
model_data <- model_data %>%
mutate(Q_lag2 = lag(Q,2)) %>%
mutate(change = Q_lag1 -Q_lag2) %>%
mutate(change_lag1 = lag(change,1))
model_data
model_data <- model_data %>%
mutate(Q_lag2 = lag(Q,2)) %>%
mutate(change = Q_lag1 -Q_lag2) %>%
mutate(change_lag1 = lag(change,1)) %>%
mutate(acc = change - change_lag1)
model_data
model_data <- model_data %>%
mutate(Q_lag2 = lag(Q,2)) %>%
mutate(change = Q_lag1 -Q_lag2) %>%
mutate(change_lag1 = lag(change,1)) %>%
mutate(acc = change - change_lag1) %>% na.omit()
model_data
# Specification of the model formula
model_formula <- as.formula(Q ~ as.numeric(date) + as.factor(dec) + Q_lag1 + change + acc)
model_data <- model_data %>%
mutate(Q_lag2 = lag(Q,2)) %>%
mutate(change = Q_lag1 -Q_lag2) %>%
mutate(change_lag1 = lag(change,1)) %>%
mutate(acc = change - change_lag1) %>% na.omit()
model_data
# Specification of the model formula
model_formula <- as.formula(Q ~ as.numeric(date) + as.factor(dec) + Q_lag1 + change + acc)
model_data %>% na.omit() %>%
plot_time_series_regression(
.date_var = date,
.formula = model_formula,
.show_summary = TRUE # We do show the summary since we have plotted the summary output already above.
)
model_data <- model_data %>%
mutate(Q_lag2 = lag(Q,2)) %>%
mutate(change = Q_lag1 -Q_lag2) %>%
mutate(change_lag1 = lag(change,1)) %>%
mutate(acc = change - change_lag1) %>% na.omit()
model_data
# Specification of the model formula
model_formula <- as.formula(Q ~  as.factor(dec) + Q_lag1 + change + acc)
model_data %>% na.omit() %>%
plot_time_series_regression(
.date_var = date,
.formula = model_formula,
.show_summary = TRUE # We do show the summary since we have plotted the summary output already above.
)
model_data <- model_data %>%
mutate(Q_lag2 = lag(Q,2)) %>%
mutate(change = Q_lag1 -Q_lag2) %>%
mutate(change_lag1 = lag(change,1)) %>%
mutate(acc = change - change_lag1) %>% na.omit()
model_data
# Specification of the model formula
model_formula <- as.formula(Q ~ as.numeric(date) +  Q_lag1 + change + acc)
model_data %>% na.omit() %>%
plot_time_series_regression(
.date_var = date,
.formula = model_formula,
.show_summary = TRUE # We do show the summary since we have plotted the summary output already above.
)
model_data %>% lm(formula=model_formula) %>% summary()
model_data <- model_data %>%
mutate(Q_lag2 = lag(Q,2)) %>%
mutate(change = Q_lag1 -Q_lag2) %>%
mutate(change_lag1 = lag(change,1)) %>%
mutate(acc = change - change_lag1) %>% na.omit()
model_data
# Specification of the model formula
model_formula <- as.formula(Q ~ as.numeric(date) + as.factor(dec) + Q_lag1 + change + acc)
model_data %>% na.omit() %>%
plot_time_series_regression(
.date_var = date,
.formula = model_formula,
.show_summary = TRUE # We do show the summary since we have plotted the summary output already above.
)
model_data %>% lm(formula=model_formula) %>% summary()
model_data %>% lm(formula=model_formula) %>% summary()
model_data <- model_data %>%
mutate(Q_lag2 = lag(Q,2)) %>%
mutate(change = Q_lag1 -Q_lag2) %>%
mutate(change_lag1 = lag(change,1)) %>%
mutate(acc = change - change_lag1) %>% na.omit()
model_data
# Specification of the model formula
model_formula <- as.formula(Q ~ as.numeric(date) +  Q_lag1 + change + acc)
model_data %>% na.omit() %>%
plot_time_series_regression(
.date_var = date,
.formula = model_formula,
.show_summary = TRUE # We do show the summary since we have plotted the summary output already above.
)
model_data %>% lm(formula=model_formula) %>% summary()
model_data <- model_data %>%
mutate(Q_lag2 = lag(Q,2)) %>%
mutate(change = Q_lag1 -Q_lag2) %>%
mutate(change_lag1 = lag(change,1)) %>%
mutate(acc = change - change_lag1) %>% na.omit()
model_data
# Specification of the model formula
model_formula <- as.formula(Q ~ as.numeric(date) + as.factor(dec) + Q_lag1 + change + acc)
model_data %>% na.omit() %>%
plot_time_series_regression(
.date_var = date,
.formula = model_formula,
.show_summary = TRUE # We do show the summary since we have plotted the summary output already above.
)
model_data %>% lm(formula=model_formula) %>% summary()
model <- model_data %>% lm(formula=model_formula)
model %>% summary()
model_data %>%
mutate(pred = predict(model))
?mutate
model_data %>%
mutate(pred = predict(model)) %>%
mutate(Q = expm1(Q), pred = expm1(pred))
model_data <- model_data %>%
mutate(Q_lag2 = lag(Q,2)) %>%
mutate(change = Q_lag1 -Q_lag2) %>%
mutate(change_lag1 = lag(change,1)) %>%
mutate(acc = change - change_lag1) %>% na.omit()
model_data
# Specification of the model formula
model_formula <- as.formula(Q ~ as.numeric(date) + as.factor(dec) + Q_lag1 + change + acc)
model_data %>% na.omit() %>%
plot_time_series_regression(
.date_var = date,
.formula = model_formula,
.show_summary = TRUE # We do show the summary since we have plotted the summary output already above.
)
model <- model_data %>% lm(formula=model_formula)
model %>% summary()
model_fc <- model_data %>%
mutate(pred = predict(model)) %>%
mutate(Q = expm1(Q), pred = expm1(pred)) %>%
select(date,Q,pred)
model_fc
model_data %>%
mutate(pred = predict(model)) %>%
mutate(Q = expm1(Q), pred = expm1(pred))
model_data <- model_data %>%
mutate(Q_lag2 = lag(Q,2)) %>%
mutate(change = Q_lag1 -Q_lag2) %>%
mutate(change_lag1 = lag(change,1)) %>%
mutate(acc = change - change_lag1) %>% na.omit()
model_data
# Specification of the model formula
model_formula <- as.formula(Q ~ as.numeric(date) + as.factor(dec) + Q_lag1 + change + acc)
model_data %>% na.omit() %>%
plot_time_series_regression(
.date_var = date,
.formula = model_formula,
.show_summary = TRUE # We do show the summary since we have plotted the summary output already above.
)
model <- model_data %>% lm(formula=model_formula)
model %>% summary()
model_fc <- model_data %>%
mutate(pred = predict(model)) %>%
mutate(Q = expm1(Q), pred = expm1(pred)) %>%
select(date,Q,pred)
model_fc
model_fc
model_fc %>% tk_ts(frequency = 36)
model_fc %>% tk_ts(frequency = 36) %>% cycle()
model_fc %>% tk_ts(frequency = 36)
model_fc %>% tk_ts(frequency = 36)
model_fc %>% tk_ts(frequency = 36) %>% tapply( cycle(ts), sd, na.rm = TRUE)
model_fc %>% tk_ts(frequency = 36) %>% tapply(cycle(), sd, na.rm = TRUE)
model_fc_ts <- model_fc %>% tk_ts(frequency = 36)
tapply(model_fc_ts, cycle(ts), sd, na.rm = TRUE)
model_fc_ts)
model_fc <- model_data %>%
mutate(pred = predict(model)) %>%
mutate(Q = expm1(Q), pred = expm1(pred)) %>%
select(date,Q,pred,dec)
model_fc
model_fc_fbl <- model_data %>%
mutate(pred = predict(model)) %>%
mutate(Q = expm1(Q), pred = expm1(pred)) %>%
select(date,Q,pred,dec)
model_fc_tbl
model_fc_fbl <- model_data %>%
mutate(pred = predict(model)) %>%
mutate(Q = expm1(Q), pred = expm1(pred)) %>%
select(date,Q,pred,dec)
model_fc_tbl
model_fc_tbl <- model_data %>%
mutate(pred = predict(model)) %>%
mutate(Q = expm1(Q), pred = expm1(pred)) %>%
select(date,Q,pred,dec)
model_fc_tbl
model_fc_wide_tbl <- pivot_wider()
model_fc_wide_tbl
model_fc_wide_tbl <- model_fc_tbl %>%  pivot_wider()
model_fc_wide_tbl
model_fc_wide_tbl <- model_fc_tbl %>%  pivot_wider(dec)
model_fc_tbl %>%  pivot_wider(dec)
?pivot_wider
model_fc_wide_tbl <- model_fc_tbl %>%  pivot_wider(names_from = dec)
model_fc_wide_tbl
model_fc_wide_tbl <- model_fc_tbl %>%  pivot_longer(-date)
model_fc_wide_tbl
?reshape
??reshape
library(devtools)
library(tidyverse)
library(lubridate)
library(timetk)
library(DataExplorer)
library(riversCentralAsia)
data <- ChirchikRiverBasin # load data
q_dec_tbl <- data %>% filter(code == '16279' | code == '16290') # Note for the new name of the object, we choose to add periodicity (_dec_) and data type (_tbl for tibble/dataframe) to the data name. This just helps to stay organized and is good practice in R programming.
q_dec_tbl
q_dec_tbl %>% plot_time_series(date,data,
.facet_vars  = code,
.smooth      = FALSE,
.interactive = TRUE,
.x_lab       = "year",
.y_lab       = "m^3/s",
.title       = ""
)
q_dec_tbl %>% group_by(code) %>%
summarize(n.na = sum(is.na(data)), na.perc = n.na/n()*100)
q_dec_filled_tbl <- q_dec_tbl
q_dec_filled_tbl$data[is.na(q_dec_filled_tbl$data)] =
q_dec_filled_tbl$norm[is.na(q_dec_filled_tbl$data)] # Gap filling step
q_dec_filled_tbl %>% plot_time_series(date, data,
.facet_vars  = code,
.smooth      = FALSE,
.interactive = TRUE,
.x_lab       = "year",
.y_lab       = "m^3/s",
.title       = ""
)
q_dec_filled_wide_tbl <- q_dec_filled_tbl %>% # again we use the name convention of objects as introduced above
mutate(code = paste0('Q',code %>% as.character())) %>% # Since we convert everything to long form, we want to keep information as compact as possible. Hence, we paste the type identifier (Q for discharge here) in from of the 5 digit station code.
select(date,data,code) %>% # ... and then ditch all the remainder information
pivot_wider(names_from = "code",values_from = "data") # in order to pivot to the long format, we need to make a small detour via the wide format.
q_dec_filled_long_tbl <- q_dec_filled_wide_tbl %>% pivot_longer(c('Q16279','Q16290')) # and then pivot back
q_dec_filled_wide_tbl
p_dec_tbl <- data %>% filter(type=="P" & code!="38339")
p_dec_tbl %>% plot_time_series(date,data,
.facet_vars  = code,
.interactive = TRUE,
.smooth      = FALSE,
.title       = "",
.y_lab       = "mm/decade",
.x_lab       = "year"
)
p_dec_filled_tbl <- p_dec_tbl
p_dec_filled_tbl$data[is.na(p_dec_filled_tbl$data)] = p_dec_filled_tbl$norm[is.na(p_dec_filled_tbl$data)]
p_dec_filled_tbl %>% plot_time_series(date,data,
.facet_vars  = code,
.interactive = TRUE,
.smooth      = FALSE,
.title       = "",
.y_lab       = "mm/decade",
.x_lab       = "year"
)
library(simputation)
# First, we bring the data into the suitable format.
p_dec_wide_tbl <- p_dec_tbl %>%
mutate(code = paste0('P',code %>% as.character())) %>%
select(date,data,code) %>%
pivot_wider(names_from = "code",values_from = "data")
# Second, we impute missing values.
p_dec_filled_wide_tbl <- p_dec_wide_tbl  %>%
impute_rlm(P38471 ~ P38462 + P38464) %>% # Imputing precipitation at station 38471 using a robust linear regression model
impute_rlm(P38462 ~ P38471 + P38464) %>% # Imputing precipitation at station 38462 using a robust linear regression model
impute_rlm(P38464 ~ P38462 + P38471) # Imputing precipitation at station 38464 using a robust linear regression model
p_dec_filled_long_tbl <- p_dec_filled_wide_tbl %>% pivot_longer(c('P38462','P38464','P38471'))
p_dec_filled_long_tbl%>% plot_time_series(date,value,
.facet_vars  = name,
.interactive = TRUE,
.smooth      = FALSE,
.title       = '',
.y_lab       = "mm/decade",
.x_lab       = "year"
)
p_dec_filled_long_tbl %>% group_by(name) %>% summarize(n.na = sum(is.na(value)), n.na.perc = n.na/n()*100)
p_dec_filled_wide_tbl %>% head(10)
p_dec_filled_wide_tbl %>% tail()
p_dec_filled_wide_tbl <- p_dec_filled_wide_tbl  %>%
impute_rlm(P38462 ~ P38471) %>% # Imputing precipitation at station 38462 using a robust linear regression model
impute_rlm(P38464 ~ P38471) # Imputing precipitation at station 38464 using a robust linear regression model
p_dec_filled_wide_tbl %>% head(10)
p_dec_filled_wide_tbl <- p_dec_filled_wide_tbl %>% na.omit()
p_dec_filled_wide_tbl %>% tail()
t_dec_tbl <- data %>% filter(type=="T")
t_dec_tbl %>% plot_time_series(date,data,
.facet_vars  = code,
.interactive = TRUE,
.smooth      = FALSE,
.title       = '',
.y_lab       = "deg. Celsius",
.x_lab       = "year"
)
# First, we bring the data into the suitable format.
t_dec_wide_tbl <- t_dec_tbl %>%
mutate(code = paste0('T',code %>% as.character())) %>%
select(date,data,code) %>%
pivot_wider(names_from = "code",values_from = "data")
# Second, we impute missing values.
t_dec_filled_wide_tbl <- t_dec_wide_tbl  %>%
impute_rlm(T38471 ~ T38462) %>% # Imputing precipitation at station 38471 using a robust linear regression model
impute_rlm(T38462 ~ T38471) # Imputing precipitation at station 38462 using a robust linear regression model
t_dec_filled_long_tbl <- t_dec_filled_wide_tbl %>%
pivot_longer(c('T38462','T38471'))
t_dec_filled_long_tbl%>%
plot_time_series(date,value,
.facet_vars  = name,
.interactive = TRUE,
.smooth      = FALSE,
.title       = '',
.y_lab       = "deg. Celsius",
.x_lab       = "year"
)
t_dec_filled_long_tbl %>%
group_by(name) %>%
summarize(n.na = sum(is.na(value)), n.na.perc = n.na/n()*100)
t_dec_filled_wide_tbl %>% head()
t_dec_filled_wide_tbl %>% tail()
t_dec_filled_wide_tbl <- t_dec_filled_wide_tbl %>% na.omit()
# Final concatenation
data_wide_tbl <- right_join(q_dec_filled_wide_tbl,p_dec_filled_wide_tbl,by='date')
data_wide_tbl <- right_join(data_wide_tbl,t_dec_filled_wide_tbl,by='date')
# Creating long form
data_long_tbl <- data_wide_tbl %>%
pivot_longer(Q16279:T38471)
# Cross checking completeness of record
data_long_tbl %>%
group_by(name) %>%
summarize(n.na = sum(is.na(value)), n.na.perc = n.na/n()*100)
## Temp storage of data (remove later)
# fPath <- '/Users/tobiassiegfried/Dropbox (hydrosolutions)/1_HSOL_PROJECTS/PROJECTS/SDC/DKU_WRM_COURSE_CA/Course Materials/Handbook/Applied_Hydrological_Modeling_Bookdown/temp/'
# saveRDS(data_wide_tbl,file=paste(fPath,'data_wide_tbl',sep=""))
# saveRDS(data_long_tbl,file=paste(fPath,'data_long_tbl',sep=""))
data_long_tbl %>%
group_by(name) %>%
plot_time_series(date, value,
.smooth      = FALSE,
.interactive = FALSE,
.facet_ncol  = 2,
.title       = ""
)
data_long_tbl %>%
group_by(name)  %>%
ggplot(aes(x=value,colour = name)) +
geom_histogram(bins=50) +
facet_wrap(~name, scales = "free") +
theme(legend.position = "none")
data_wide_tbl %>%
mutate(across(Q16279:P38471,.fns = log1p)) %>% # transforms  discharge and precipitation time series
pivot_longer(-date) %>%
ggplot(aes(x=value,colour = name)) +
geom_histogram(bins=50) +
facet_wrap(~name, scales = "free") +
theme(legend.position = "none")
data_long_tbl %>%
filter(name=='Q16279' | name=='Q16290') %>%
plot_time_series(date, log(value+1),
.facet_vars  = name,
.smooth      = FALSE,
.interactive = FALSE,
.title       = "",
.y_lab       = "[-]",
.x_lab       = "year"
)
data_long_tbl %>%
filter(name == 'T38462' | name == 'T38471') %>%
plot_time_series(date, value,
.smooth     = TRUE,
.facet_vars = name,
.title      = "",
.y_lab      = "deg. C.",
.x_lab      = "year"
)
data_long_tbl %>%
filter(name == 'T38462') %>%
summarise_by_time(.date_var = date, .by="month",value=mean(value)) %>%
tk_ts(frequency = 12) %>%
forecast::ggsubseriesplot(year.labels = FALSE) +
geom_smooth(method = "lm",color="red") +
#ggtitle('Development of Monthly Mean Temperatures from 1933 - 2015 at Station 38462') +
xlab('month') +
ylab('Degrees Celsius')
data_long_tbl %>% filter(name == 'Q16279') %>%
plot_acf_diagnostics(date, value,
.show_white_noise_bars = TRUE,
.lags = 72,
.title = ""
)
data_wide_tbl %>% plot_acf_diagnostics(date,Q16279,
.ccf_vars = Q16290,
.show_ccf_vars_only = TRUE,
.show_white_noise_bars = TRUE,
.lags = 72,
.title = ""
)
data_wide_tbl %>% plot_acf_diagnostics(date,T38471,
.ccf_vars = Q16279,
.show_ccf_vars_only = TRUE,
.show_white_noise_bars = TRUE,
.lags = 72,
.title = ""
)
data_wide_tbl %>% plot_acf_diagnostics(date,P38471,
.ccf_vars = Q16279,
.show_ccf_vars_only = TRUE,
.show_white_noise_bars = TRUE,
.lags = 72,
.title = ""
)
pacf <- data_wide_tbl %>%
select(date,Q16290,T38462) %>%
mutate(Q16290 = log1p(Q16290)) %>%
tk_ts(start = as.Date('1933-01-10'), frequency = 36) %>%
pacf(lag.max = 100)
data_long_tbl %>%
filter(name=="Q16279" | name=="Q16290") %>%
plot_seasonal_diagnostics(date,
log(value+1),
.facet_vars = name,
.feature_set = c("week","month.lbl","year"),
.interactive = FALSE,
.title = ""
)
data_long_tbl %>%
filter(name=="P38462" | name=="P38464" | name=="P38471") %>%
plot_seasonal_diagnostics(date,
log1p(value),
.facet_vars = name,
.feature_set = c("week","month.lbl","year"),
.interactive = FALSE,
.title = ""
)
data_long_tbl %>%
filter(name=="T38462" | name=="T38471") %>%
plot_seasonal_diagnostics(date,
value,
.facet_vars = name,
.feature_set = c("week","month.lbl","year"),
.interactive = FALSE,
.title = "",
)
data_long_tbl %>% filter(name=="Q16279" | name=="Q16290") %>%
plot_anomaly_diagnostics(date,
log(value+1),
.facet_vars  = name,
.interactive = TRUE,
.title = "")
data_long_tbl %>% filter(name=="P38462" | name=="P38464" | name=="P38471") %>%
plot_anomaly_diagnostics(date,
value,
.facet_vars  = name,
.interactive = TRUE,
.title = "")
data_long_tbl %>% filter(name=="T38462" | name=="T38471") %>%
plot_anomaly_diagnostics(date,value,
.facet_vars  = name,
.interactive = TRUE,
.title = "")
model_formula <- as.formula(log1p(Q16290) ~
as.numeric(date)
)
data_decs_wide_tbl %>%
plot_time_series_regression(
.date_var = date,
.formula = model_formula,
.show_summary = TRUE
)
