}
stats
}
test <- aggregate_stats(apgar.r)
c(0:(dimensions[2]-1))
merge(lw$DOB,lw[,2])
aggregate_stats <- function(y) {
lw <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[1])
lh <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[2])
md <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[3])
uh <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[4])
uw <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[5])
NObs <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$n)
dimensions <- dim(lw)
# Return a list with dimensions[2] entries containing the statistics for each
# entry
stats <- list()
for (i in c(0:(dimensions[2]-1))) {
stats <- c(stats,
inner_join(lw$DOB,lw[,i+1],lh[,i+1],md[,i+1],uh[,i+1],uw[,i+1],
NObs[,i+1]))
}
stats
}
test <- aggregate_stats(apgar.r)
?inner_join
test <- inner_join(lw[,3],lw[,2],by='DOB')
test <- inner_join(lw,lw,by='DOB')
head test
head(test)
aggregate_stats <- function(y) {
lw <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[1])
lh <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[2])
md <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[3])
uh <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[4])
uw <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[5])
NObs <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$n)
stats <- inner_join(lw,lh,md,uh,uw,NObs)
stats
# dimensions <- dim(lw)
# # Return a list with dimensions[2] entries containing the statistics for each
# # entry
# stats <- list()
# for (i in c(2:(dimensions[2]))) {
#   stats <- c(stats,
#              inner_join(lw[,i],lh[,i],md[,i],uh[,i],uw[,i],
#                         NObs[,i]),by='DOB')
# }
# stats
}
test <- aggregate_stats(apgar.r)
aggregate_stats <- function(y) {
lw <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[1])
lh <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[2])
md <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[3])
uh <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[4])
uw <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[5])
NObs <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$n)
stats <- inner_join(lw,lh,by='DOB')
stats <- inner_join(stats,md,by='DOB')
stats <- inner_join(stats,uh,by='DOB')
stats <- inner_join(stats,uw,by='DOB')
stats <- inner_join(stats,NObs,by='DOB')
stats
# dimensions <- dim(lw)
# # Return a list with dimensions[2] entries containing the statistics for each
# # entry
# stats <- list()
# for (i in c(2:(dimensions[2]))) {
#   stats <- c(stats,
#              inner_join(lw[,i],lh[,i],md[,i],uh[,i],uw[,i],
#                         NObs[,i]),by='DOB')
# }
# stats
}
test <- aggregate_stats(apgar.r)
aggregate_stats <- function(y) {
lw <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[1])
lh <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[2])
md <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[3])
uh <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[4])
uw <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[5])
NObs <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$n)
names(lw) <- paste(names(lw),'_lw',sep='')
names(lh) <- paste(names(lh),'_lh',sep='')
names(md) <- paste(names(md),'_md',sep='')
names(uh) <- paste(names(uh),'_uh',sep='')
names(uw) <- paste(names(uw),'_uw',sep='')
names(NObs) <- paste(names(NObs),'_NObs',sep='')
stats <- inner_join(lw,lh,by='DOB')
stats <- inner_join(stats,md,by='DOB')
stats <- inner_join(stats,uh,by='DOB')
stats <- inner_join(stats,uw,by='DOB')
stats <- inner_join(stats,NObs,by='DOB')
stats
# dimensions <- dim(lw)
# # Return a list with dimensions[2] entries containing the statistics for each
# # entry
# stats <- list()
# for (i in c(2:(dimensions[2]))) {
#   stats <- c(stats,
#              inner_join(lw[,i],lh[,i],md[,i],uh[,i],uw[,i],
#                         NObs[,i]),by='DOB')
# }
# stats
}
test <- aggregate_stats(apgar.r)
y<-apgar.r
lw <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[1])
lh <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[2])
md <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[3])
uh <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[4])
uw <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[5])
NObs <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$n)
names(lw) <- paste(names(lw),'_lw',sep='')
names(lh) <- paste(names(lh),'_lh',sep='')
names(md) <- paste(names(md),'_md',sep='')
names(uh) <- paste(names(uh),'_uh',sep='')
names(uw) <- paste(names(uw),'_uw',sep='')
names(NObs) <- paste(names(NObs),'_NObs',sep='')
stats <- inner_join(lw,lh,by='DOB')
names(lw)
names(lw)[1]
names(lw)[2:]
names(lw)[2:end]
names(lw)[2:length(names(lw))]
c(names(lw)[1],paste(names(lw)[2:length(names(lw))],'_lw',sep=''))
aggregate_stats <- function(y) {
lw <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[1])
lh <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[2])
md <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[3])
uh <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[4])
uw <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[5])
NObs <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$n)
names(lw) <- c(names(lw)[1],
paste(names(lw)[2:length(names(lw))],'_lw',sep=''))
names(lh) <- c(names(lh)[1],
paste(names(lh)[2:length(names(lh))],'_lh',sep=''))
names(md) <- c(names(md)[1],
paste(names(md)[2:length(names(md))],'_md',sep=''))
names(uh) <- c(names(uh)[1],
paste(names(uh)[2:length(names(uh))],'_uh',sep=''))
names(uw) <- c(names(uw)[1],
paste(names(uw)[2:length(names(uw))],'_uw',sep=''))
names(NObs) <- c(names(NObs)[1],
paste(names(NObs)[2:length(names(NObs))],'_NObs',sep=''))
stats <- inner_join(lw,lh,by='DOB')
stats <- inner_join(stats,md,by='DOB')
stats <- inner_join(stats,uh,by='DOB')
stats <- inner_join(stats,uw,by='DOB')
stats <- inner_join(stats,NObs,by='DOB')
stats
# dimensions <- dim(lw)
# # Return a list with dimensions[2] entries containing the statistics for each
# # entry
# stats <- list()
# for (i in c(2:(dimensions[2]))) {
#   stats <- c(stats,
#              inner_join(lw[,i],lh[,i],md[,i],uh[,i],uw[,i],
#                         NObs[,i]),by='DOB')
# }
# stats
}
test <- aggregate_stats(apgar.r)
rm(list=('lh','lw','md','NObs','test','uh','uw','y'))
rm(list=c('lh','lw','md','NObs','test','uh','uw','y'))
rm(list=c('dimensions'))
variables.r <- list(apgar.r,birthweight.r,headcircum.r,length.r)
head(variables.r)
variables.s <- lapply(variables.r,aggregate_stats)
variables.m <- list(apgar.m,birthweight.m,headcircum.m,length.m)
lapply(variables.m,function(x) ggplot(x,aes(DOB,value)) + geom_point() +
facet_wrap(~variable,scales="free"))
rm(list=c('birthweigh.m','length.m','headcircum.m','apgar.m'))
rm(list=c('birthweight.m','length.m','headcircum.m','apgar.m'))
rm(list='data')
rm(list=c('apgar.r','birthweight.r','length.r','headcircum.r'))
rm(list='apgar.s')
lapply(variables.m,function(x) ggplot(x,aes(DOB,value)) + geom_point() +
facet_wrap(~variable,scales="free"))
?melt
variable_names <- list('Variable#1'='Apgar [-]',
'Variable#2'='Birthweight [g]',
'Variable#3'='Head circumference [cm])',
'Variable#4'='Length [cm]')
variable_labeller <- function(variable,value) {
return(variable_names[value])
}
lapply(variables.m,function(x) ggplot(x,aes(DOB,value)) + geom_point() +
facet_wrap(~variable,scales="free",labeller=variable_labeller()))
lapply(variables.m,function(x) ggplot(x,aes(DOB,value)) + geom_point() +
lapply(variables.m,function(x) ggplot(x,aes(DOB,value)) + geom_point() +
facet_wrap(~variable,scales="free",labeller=variable_labeller))
)
lapply(variables.m,function(x) ggplot(x,aes(DOB,value)) + geom_point() +
facet_wrap(~variable,scales="free",labeller=variable_labeller))
?lapply
lapply(variables.m,function(x) ggplot(x,aes(DOB,value)) + geom_point() +
facet_wrap(~variable,scales="free",
labeller=variable_labeller(variable,value)))
lapply(variables.m,function(x) ggplot(x,aes(DOB,value)) + geom_point() +
facet_wrap(~variable,scales="free",
labeller=variable_labeller(variable,x)))
variable_labeller(head(variables.m[[1]]$variable),head(variables.m[[1]]$value))
test <- variable_labeller(head(variables.m[[1]]$variable),head(variables.m[[1]]$value))
test
levels(variables.m[[1]])
levels(variables.m[[1]]$variable)
?ggplot
variable_names <- c('Apgar [-]','Birthweight [g]','Head circumference [cm])',
'Length [cm]')
lapply(variables.m,function(x) ggplot(x,aes(DOB,value)) + geom_point() +
facet_wrap(~variable,scales="free") + ggtitle(variable_names(x)))
lapply(variables.m,function(x) ggplot(x,aes(DOB,value)) + geom_point() +
facet_wrap(~variable,scales="free") + ggtitle(variable_names[x]))
variables.m <- list('Apgar [-]'=apgar.m,
'Birthweight [g]'=birthweight.m,
'Head circumference [cm]'=headcircum.m,
'Length [cm]'=length.m)
birthweight.m <- melt(birthweight.r,'DOB')
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(install.load)
install_load('csv')
install_load('reshape')
install_load('zoo')
install_load('dygraphs')
install_load('changepoint')
install_load('changepoint.np')
install_load('knitr')
install_load('kableExtra')
install_load('lubridate')
install_load('tidyverse')
install_load('dplyr')
install_load('ggplot2')
data <- read.csv('TanzaniaDataset_May19.csv')
data$DOB <- as.Date(ifelse(grepl("/", data$Dateofbirth),
as.Date(data$Dateofbirth, format = '%m/%d/%Y'),
as.Date(data$Dateofbirth, format = '%d.%m.%y')))
birthweight.r <- data %>%
select(DOB,Birthweight,Birtweight_RE,minT0nDa20averageTemperature,
meanTemperature,RainySeason_dry,HarvestSeason_Plenty)
names(birthweight.r) <- paste(names(birthweight.r),
c('','_g','_g','_','_degC','_','_'),sep='')
length.r <- data %>%
select(DOB,Length,Length_RE, RainySeason_Masika,HarvestSeason_Plenty,
PNb,PNb1,PNb2,PNb3)
names(length.r) <- paste(names(length.r),
c('','_cm','_cm','_','_','_','_','_','_'),sep='')
headcircum.r <- data %>%
select(DOB,EDI.T0,EDI.T1,EDI.T2,EDI.T3,T0Nda30max,T1Nda30max,T2Nda30max,
T3NcDa30max,minT0averageTemperature,minT1averageTemperature,
minT2averageTemperature,minT3averageTemperature,
minT0nDa20averageTemperature,minT1nDa20averageTemperature,
minT2nDa20averageTemperature,minT3nDa20averageTemperature,
RainySeason_Masika)
names(headcircum.r) <- paste(names(headcircum.r),
c('','_','_','_','_','_','_','_','_',
'_','_','_','_','_','_','_','_','_'),sep='')
apgar.r <- data %>%
select(DOB,RainySeason_Masika,HarvestSeason_Plenty)
names(apgar.r) <- paste(names(apgar.r),
c('','_','_'),sep='')
#rm(list='data')
birthweight.m <- melt(birthweight.r,'DOB')
length.m <- melt(length.r,'DOB')
headcircum.m <- melt(headcircum.r,'DOB')
apgar.m <- melt(apgar.r,'DOB')
variables.m <- list('Apgar [-]'=apgar.m,
'Birthweight [g]'=birthweight.m,
'Head circumference [cm]'=headcircum.m,
'Length [cm]'=length.m)
variable_names <- c('Apgar [-]','Birthweight [g]','Head circumference [cm])',
'Length [cm]')
lapply(variables.m,function(x) ggplot(x,aes(DOB,value)) + geom_point() +
facet_wrap(~variable,scales="free") + ggtitle(variable_names))
lapply(variables.m,function(x) ggplot(x,aes(DOB,value)) + geom_point() +
facet_wrap(~variable,scales="free"))
names(variables.m)
lapply(variables.m,function(x) ggplot(x,aes(DOB,value)) + geom_point() +
facet_wrap(~variable,scales="free") + ggtitle(names(x)))
names(variables.m)
names(variables.m[1])
names(variables.m[[1]])
lapply(names(variables.m),function(x) ggplot(variables.m[[x]],aes(DOB,value)) +
geom_point() +
facet_wrap(~variable,scales="free") + ggtitle(x))
aggregate_stats <- function(y) {
lw <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[1])
lh <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[2])
md <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[3])
uh <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[4])
uw <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$stats[5])
NObs <- aggregate(. ~ DOB, data=y, function(x) boxplot.stats(x)$n)
names(lw) <- c(names(lw)[1],
paste(names(lw)[2:length(names(lw))],'_lw',sep=''))
names(lh) <- c(names(lh)[1],
paste(names(lh)[2:length(names(lh))],'_lh',sep=''))
names(md) <- c(names(md)[1],
paste(names(md)[2:length(names(md))],'_md',sep=''))
names(uh) <- c(names(uh)[1],
paste(names(uh)[2:length(names(uh))],'_uh',sep=''))
names(uw) <- c(names(uw)[1],
paste(names(uw)[2:length(names(uw))],'_uw',sep=''))
names(NObs) <- c(names(NObs)[1],
paste(names(NObs)[2:length(names(NObs))],'_NObs',sep=''))
stats <- inner_join(lw,lh,by='DOB')
stats <- inner_join(stats,md,by='DOB')
stats <- inner_join(stats,uh,by='DOB')
stats <- inner_join(stats,uw,by='DOB')
stats <- inner_join(stats,NObs,by='DOB')
stats
}
variables.r <- list(apgar.r,birthweight.r,headcircum.r,length.r)
variables.s <- lapply(variables.r,aggregate_stats)
variables.z <- lapply(variables.s,function(x) zoo(x, order.by = x$DOB))
head(variables.z[[1]])
varialbes.z <- variables.z[,colnames(variables.s) != 'DOB']
varialbes.z <- lapply(variables.z, function(x) x[,colnames(x) != 'DOB'])
head(variables.z[[1]])
head(variables.z[[1]][,colnames(variables.z) != 'DOB'])
head(variables.z[[1]][,colnames(variables.z) == 'DOB'])
head(variables.z[[1]])
head(variables.z[[1]][,1])
head(variables.z[[1]][,!1])
head(variables.z[[1]][,2])
variables.z[[1]]$DOB <- NULL
head(variables.z[[1]])
varialbes.z <- lapply(variables.z, function(x) x$DOB <- NULL)
head(variables.z[[2]])
variables.z <- lapply(variables.s,
function(x) zoo(x, order.by = x$DOB))
variables.z[[1]]$DOB <- NULL
head(variables.z[[1]])
length(variables.z)
for (i in c(1:length(variables.z))) {
variables.z[[i]]$DOB <- NULL
}
head(variables.z[[1]])
head(variables.z[[4]])
variables.r <- list('Apgar [-]'=apgar.r,
'Birthweight [g]'=birthweight.r,
'Head circumference [cm]'=headcircum.r,
'Length [cm]'=length.r)
variables.s <- lapply(variables.r,aggregate_stats)
variables.z <- lapply(variables.s,
function(x) zoo(x, order.by = x$DOB))
rm(list='varialbes.z')
for (i in c(1:length(variables.z))) {
variables.z[[i]]$DOB <- NULL
}
head(variables.z$`Apgar [-]`)
names(data)
install_load('dygraphs')
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(install.load)
install_load('csv')
install_load('reshape')
install_load('zoo')
install_load('dygraphs')
install_load('changepoint')
install_load('changepoint.np')
install_load('knitr')
install_load('kableExtra')
install_load('lubridate')
install_load('tidyverse')
install_load('dplyr')
install_load('ggplot2')
data <- read.csv('TanzaniaDataset_May19.csv')
data$DOB <- as.Date(ifelse(grepl("/", data$Dateofbirth),
as.Date(data$Dateofbirth, format = '%m/%d/%Y'),
as.Date(data$Dateofbirth, format = '%d.%m.%y')))
birthweight.r <- data %>%
select(DOB,Birthweight,Birtweight_RE,minT0nDa20averageTemperature,
meanTemperature,RainySeason_dry,HarvestSeason_Plenty)
names(birthweight.r) <- paste(names(birthweight.r),
c('','_g','_g','_','_degC','_','_'),sep='')
length.r <- data %>%
select(DOB,Length,Length_RE, RainySeason_Masika,HarvestSeason_Plenty,
PNb,PNb1,PNb2,PNb3)
names(length.r) <- paste(names(length.r),
c('','_cm','_cm','_','_','_','_','_','_'),sep='')
headcircum.r <- data %>%
select(DOB,Headcircum,HeadCircumference_RE,EDI.T0,EDI.T1,EDI.T2,EDI.T3,
T0Nda30max,T1Nda30max,T2Nda30max,
T3NcDa30max,minT0averageTemperature,minT1averageTemperature,
minT2averageTemperature,minT3averageTemperature,
minT0nDa20averageTemperature,minT1nDa20averageTemperature,
minT2nDa20averageTemperature,minT3nDa20averageTemperature,
RainySeason_Masika)
names(headcircum.r) <- paste(names(headcircum.r),
c('','_cm','_cm','_','_','_','_','_','_','_','_',
'_','_','_','_','_','_','_','_','_'),sep='')
apgar.r <- data %>%
select(DOB,Apgarscoreat1min,Apgarscoreat5min,Apgarscoreat10min,
RainySeason_Masika,HarvestSeason_Plenty)
names(apgar.r) <- paste(names(apgar.r),
c('','_','_','_','_','_'),sep='')
#rm(list='data')
birthweight.m <- melt(birthweight.r,'DOB')
length.m <- melt(length.r,'DOB')
headcircum.m <- melt(headcircum.r,'DOB')
apgar.m <- melt(apgar.r,'DOB')
variables.m <- list('Apgar [-]'=apgar.m,
'Birthweight [g]'=birthweight.m,
'Head circumference [cm]'=headcircum.m,
'Length [cm]'=length.m)
lapply(names(variables.m),function(x) ggplot(variables.m[[x]],aes(DOB,value)) +
geom_point() +
facet_wrap(~variable,scales="free"))
#rm(list=c('birthweight.m','length.m','headcircum.m','apgar.m'))
lapply(names(variables.m),function(x) ggplot(variables.m[[x]],aes(DOB,value)) +
geom_point(alpha = 1/10,size=1) +
facet_wrap(~variable,scales="free"))
lapply(names(variables.m),function(x) ggplot(variables.m[[x]],aes(DOB,value)) +
geom_point(alpha = 1/100,size=0.1,na.rm = TRUE) +
facet_wrap(~variable,scales="free"))
mydata <- read.csv('../code/envDataForRita/code/20190703_allVariables.csv)
)
''
mydata <- read.csv('../code/envDataForRita/code/20190703_allVariables.csv')
View(mydata)
mydata <- read.csv('../code/envDataForRita/code/20190703_allVariables.csv',sep=' ')
View(mydata)
mydata <- read.csv('../code/20190703_allVariables.csv',sep=' ')
View(mydata)
mydata_raw <- read.csv('../code/envDataForRita/code/20190703_allVariablesRawData.csv',sep=' ')
View(mydata_raw)
mydata_indicators <- read.csv('../code/envDataForRita/code/20190918_indicators2.csv',sep=' ')
View(mydata_indicators)
mydata_scaled <- read.csv('../code/envDataForRita/code/20190703_allVariablesScaled.csv',sep=' ')
View(mydata_scaled)
mydata_temp_max <- read.csv('../code/envDataForRita/temperature_data/20190701_Temperature_maxima.csv')
mydata_temp_mean <- read.csv('../code/envDataForRita/temperature_data/20190701_Temperature_means.csv')
mydata_temp_min <- read.csv('../code/envDataForRita/temperature_data/20190701_Temperature_minima.csv')
View(mydata_temp_mean)
View(mydata_temp_max)
descriptions <- list(mydata_temp_max[1,],mydata_temp_mean[1,],mydata_temp_min[1,])
head(descriptions[[1]])
mydata_temp_max[1,] <- NULL
View(mydata_temp_max)
mydata_temp_max <- mydata_temp_max[2:dim(mydata_temp_max)[1],]
View(mydata_temp_max)
mydata_temp_mean <- mydata_temp_mean[2:dim(mydata_temp_mean)[1],]
mydata_temp_min <- mydata_temp_min[2:dim(mydata_temp_min)[1],]
?read.csv
mydata <- list(mydata_allVar,mydata_indicators,mydata_temp_max,
mydata_temp_mean,mydata_temp_min)
mydata_allVar <- read.csv('../code/envDataForRita/code/20190703_allVariables.csv',sep=' ')
mydata <- list(mydata_allVar,mydata_indicators,mydata_temp_max,
mydata_temp_mean,mydata_temp_min)
View(mydata_allVar)
mydata.z <- lapply(mydata,
function(x) zoo(x, order.by = x$Index))
mydata <- list('AllVar'=mydata_allVar,
'Indicators'=mydata_indicators,
'Tmax'=mydata_temp_max,
'Tmean'=mydata_temp_mean,
'Tmin'=mydata_temp_min)
mydata.z <- lapply(mydata,
function(x) zoo(x, order.by = x$Index))
for (i in c(1:length(mydata.z))) {
mydata.z[[i]]$Index <- NULL
}
dygraph(mydata.z[[1]])
dygraph(mydata.z[[1]]$P.T3)
dygraph(mydata.z$AllVar)
dygraph(mydata.z$AllVar$P.T3)
# tidyverse bliss
library(tidyverse)
library(timetk)     # Toolkit for working with time series in R
library(tidyquant)  # Loads tidyverse, financial pkgs, used to get data
library(tsibble)
library(visdat)
install.packages("visdat")
library(visdat)
library(tibbletime)
install.packages("tibbletime")
library(tibbletime)
# This is for dealing with and imputing missing data
library(naniar)
install.packages("naniar")
library(naniar)
install.packages("simputation")
library(simputation)
# tidyverse bliss
library(tidyverse)
library(timetk)     # Toolkit for working with time series in R
library(tidyquant)  # Loads tidyverse, financial pkgs, used to get data
library(tsibble)
library(visdat)
library(tibbletime)
# This is for dealing with and imputing missing data
library(naniar)
library(simputation)
setwd('Documents/GitHub/Applied_Hydrological_Modeling_Bookdown')
getwd()
library(bookdown)
knitr::include_graphics('_bookdown_files/Title-Figures/naryn.jpeg')
# automatically create a bib database for R packages
knitr::write_bib(c(
.packages(), 'bookdown', 'knitr', 'rmarkdown'
), 'packages.bib')
install.packages('bookdown')
install.packages("bookdown")
install.packages("bookdown")
install.packages("bookdown")
install.packages('rmarkdown','tidyverse','here','bookdown')
install.packages('rmarkdown')
install.packages('bookdown')
renv::activate()
