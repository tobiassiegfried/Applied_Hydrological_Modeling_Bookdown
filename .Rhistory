quarterQ$quarter <- quarterQ$quarter %>% format(.,format = "Q%q")
q1Q <- quarterQ %>% filter(quarter=='Q1') %>% dplyr::select(-quarter) %>% na.omit() %>%pivot_longer(-date)
q2Q <- quarterQ %>% filter(quarter=='Q2') %>% dplyr::select(-quarter) %>% na.omit() %>%pivot_longer(-date)
q3Q <- quarterQ %>% filter(quarter=='Q3') %>% dplyr::select(-quarter) %>% na.omit() %>%pivot_longer(-date)
q4Q <- quarterQ %>% filter(quarter=='Q4') %>% dplyr::select(-quarter) %>% na.omit() %>%pivot_longer(-date)
pQ1 <- q1Q  %>% na.omit() %>% #group_by(name) %>%
plot_time_series(date,value,name,
.smooth = T, .smooth_degree = 1, .smooth_period = 'auto',
.title = "", .interactive = F, .facet_ncol = 1,
.x_lab = "year", .y_lab = "Q", .legend_show = T
) + theme(legend.position = c(0.1, 0.8))
pQ2 <- q2Q  %>% na.omit() %>%#group_by(name) %>%
plot_time_series(date,value,name,
.smooth = T, .smooth_degree = 1, .smooth_period = 'auto',
.title = "", .interactive = F, .facet_ncol = 1,
.x_lab = "year",.y_lab = "Q", .legend_show = F
) #+ theme(legend.position = c(0.1, 0.8))
pQ3 <- q3Q  %>% na.omit() %>%#group_by(name) %>%
plot_time_series(date,value,name,
.smooth = T, .smooth_degree = 1, .smooth_period = 'auto',
.title = "", .interactive = F, .facet_ncol = 1,
.x_lab = "year",.y_lab = "Q",.legend_show = F
) #+ theme(legend.position = c(0.1, 0.8))
pQ4 <- q4Q  %>% na.omit() %>% #group_by(name) %>%
plot_time_series(date,value,name,
.smooth = T, .smooth_degree = 1, .smooth_period = 'auto',
.title = "", .interactive = F, .facet_ncol = 1,
.x_lab = "year",.y_lab = "Q",.legend_show = F
) #+ theme(legend.position = c(0.1, 0.8))
plotM <- list(pQ1,pQ2,pQ3,pQ4)
cowplot::plot_grid(plotlist = plotM, nrow = 1, ncol = 4)
data %>%
filter(type=='T') %>%
group_by(type,code,station,resolution) %>%
plot_time_series(date,
data,
.facet_ncol      = 1,
.interactive     = FALSE,
.smooth          = TRUE,
.title           = '')
data %>% filter(type == "T" & code=="38462") %>%
dplyr::select(date,data,code,river)  %>%
summarise_by_time(.date_var = date, .by="month",value=mean(data)) %>%
tk_ts(frequency = 12) %>%
forecast::ggsubseriesplot(year.labels = FALSE) +
geom_smooth(method = "lm",color="red") +
xlab('month') +
ylab('deg. C.')
data %>% filter(type == "T" & code=="38471") %>%
dplyr::select(date,data,code,river)  %>%
summarise_by_time(.date_var = date, .by="month",value=mean(data)) %>%
tk_ts(frequency = 12) %>%
forecast::ggsubseriesplot(year.labels = FALSE) +
geom_smooth(method = "lm",color="red") +
xlab('month') +
ylab('deg. C.')
quarterT_mean <- data %>% filter(type == "T" & code=="38471") %>%
dplyr::select(date,data,code,river)  %>%
summarise_by_time(.date_var = date, .by = "quarter",value = mean(data,na.rm = TRUE)) %>%
rename(mean = value) %>% na.omit()
quarterT_max <- data %>% filter(type == "T" & code=="38471") %>%
dplyr::select(date,data,code,river)  %>%
summarise_by_time(.date_var = date, .by = "quarter",value = max(data,na.rm = TRUE)) %>%
rename(max = value) %>% na.omit()
quarterT_min <- data %>% filter(type == "T" & code=="38471") %>%
dplyr::select(date,data,code,river)  %>%
summarise_by_time(.date_var = date,.by = "quarter",value = min(data,na.rm = TRUE)) %>%
rename(min = value) %>% na.omit()
quarterT <- left_join(quarterT_mean,quarterT_max,by='date')
quarterT <- left_join(quarterT,quarterT_min,by='date')
quarterT <-
bind_cols(quarterT,quarterT$date %>% tsibble::yearquarter()) %>% rename(quarter='...5')
quarterT$quarter <- quarterT$quarter %>% format(.,format = "Q%q")
q1T <- quarterT %>% filter(quarter=='Q1') %>% dplyr::select(-quarter) %>% pivot_longer(-date)
q2T <- quarterT %>% filter(quarter=='Q2') %>% dplyr::select(-quarter) %>% pivot_longer(-date)
q3T <- quarterT %>% filter(quarter=='Q3') %>% dplyr::select(-quarter) %>% pivot_longer(-date)
q4T <- quarterT %>% filter(quarter=='Q4') %>% dplyr::select(-quarter) %>% pivot_longer(-date)
pQ1 <- q1T  %>% #group_by(name) %>%
plot_time_series(date,value,name,
.smooth = T, .smooth_degree = 1, .smooth_period = 'auto',
.title = "", .interactive = F, .facet_ncol = 1,
.x_lab = "year", .y_lab = "deg. C.",.legend_show = T
) + theme(legend.position = c(0.1, 0.8))
pQ2 <- q2T  %>% #group_by(name) %>%
plot_time_series(date,value,name,
.smooth = T, .smooth_degree = 1, .smooth_period = 'auto',
.title = "", .interactive = F, .facet_ncol = 1,
.x_lab = "year",.y_lab = "deg. C.",.legend_show = F
)
pQ3 <- q3T  %>% #group_by(name) %>%
plot_time_series(date,value,name,
.smooth = T, .smooth_degree = 1, .smooth_period = 'auto',
.title = "", .interactive = F, .facet_ncol = 1,
.x_lab = "year",.y_lab = "deg. C.", .legend_show = F
)
pQ4 <- q4T  %>% na.omit() %>% #group_by(name) %>%
plot_time_series(date,value,name,
.smooth = T, .smooth_degree = 1, .smooth_period = 'auto',
.title = "", .interactive = F, .facet_ncol = 1,
.x_lab = "year",.y_lab = "deg. C.",.legend_show = F
)
plotM <- list(pQ1,pQ2,pQ3,pQ4)
cowplot::plot_grid(plotlist = plotM,nrow = 1,ncol = 4)
data %>%
filter(type=='P') %>%
group_by(type,code,station,resolution) %>%
plot_time_series(date,
data,
.facet_ncol      = 1,
.interactive     = FALSE,
.smooth          = FALSE,
.title           = '')
quarterP_mean <- data %>% filter(type == "P" & code=="38464") %>%
dplyr::select(date,data,code,river)  %>%
summarise_by_time(.date_var = date, .by = "quarter",value = mean(data,na.rm = TRUE)) %>%
rename(mean = value) %>% na.omit()
quarterP_max <- data %>% filter(type == "P" & code=="38464") %>%
dplyr::select(date,data,code,river)  %>%
summarise_by_time(.date_var = date, .by = "quarter",value = max(data,na.rm = TRUE)) %>%
rename(max = value) %>% na.omit()
quarterP_min <- data %>% filter(type == "P" & code=="38464") %>%
dplyr::select(date,data,code,river)  %>%
summarise_by_time(.date_var = date,.by = "quarter",value = min(data,na.rm = TRUE)) %>%
rename(min = value) %>% na.omit()
quarterP <- left_join(quarterP_mean,quarterP_max,by='date')
quarterP <- left_join(quarterP,quarterP_min,by='date')
quarterP <-
bind_cols(quarterP,quarterP$date %>% tsibble::yearquarter()) %>% rename(quarter='...5')
quarterP$quarter <- quarterP$quarter %>% format(.,format = "Q%q")
q1P <- quarterP %>% filter(quarter=='Q1') %>% dplyr::select(-quarter) %>% pivot_longer(-date)
q2P <- quarterP %>% filter(quarter=='Q2') %>% dplyr::select(-quarter) %>% pivot_longer(-date)
q3P <- quarterP %>% filter(quarter=='Q3') %>% dplyr::select(-quarter) %>% pivot_longer(-date)
q4P <- quarterP %>% filter(quarter=='Q4') %>% dplyr::select(-quarter) %>% pivot_longer(-date)
pQ1 <- q1P  %>% #group_by(name) %>%
plot_time_series(date,value,name,
.smooth = T, .smooth_degree = 1, .smooth_period = 'auto',
.title = "", .interactive = F, .facet_ncol = 1,
.x_lab = "year", .y_lab = "deg. C.",.legend_show = T
) + theme(legend.position = c(0.1, 0.8))
pQ2 <- q2P  %>% #group_by(name) %>%
plot_time_series(date,value,name,
.smooth = T, .smooth_degree = 1, .smooth_period = 'auto',
.title = "", .interactive = F, .facet_ncol = 1,
.x_lab = "year",.y_lab = "mm / 10 days",.legend_show = F
)
pQ3 <- q3P  %>% #group_by(name) %>%
plot_time_series(date,value,name,
.smooth = T, .smooth_degree = 1, .smooth_period = 'auto',
.title = "", .interactive = F, .facet_ncol = 1,
.x_lab = "year",.y_lab = "mm / 10 days", .legend_show = F
)
pQ4 <- q4P  %>% na.omit() %>% #group_by(name) %>%
plot_time_series(date,value,name,
.smooth = T, .smooth_degree = 1, .smooth_period = 'auto',
.title = "", .interactive = F, .facet_ncol = 1,
.x_lab = "year",.y_lab = "mm / 10 days",.legend_show = F
)
plotM <- list(pQ1,pQ2,pQ3,pQ4)
cowplot::plot_grid(plotlist = plotM,nrow = 1,ncol = 4)
q1TP <- left_join(q1T ,q1P ,by=c('date','name')) %>% rename(T=value.x,P=value.y)
p1 <- q1TP %>% na.omit() %>% ggplot(aes(x=T,y=P)) + geom_point() + geom_smooth(formula = y ~ x,method = "lm")
q2TP <- left_join(q2T ,q2P ,by=c('date','name')) %>% rename(T=value.x,P=value.y)
p2 <- q2TP %>% na.omit() %>% ggplot(aes(x=T,y=P)) + geom_point() + geom_smooth(formula = y ~ x,method = "lm")
q3TP <- left_join(q3T ,q3P ,by=c('date','name')) %>% rename(T=value.x,P=value.y)
p3 <- q3TP %>% na.omit() %>% ggplot(aes(x=T,y=P)) + geom_point() + geom_smooth(formula = y ~ x,method = "lm")
q4TP <- left_join(q4T ,q4P ,by=c('date','name')) %>% rename(T=value.x,P=value.y)
p4 <- q4TP %>% na.omit() %>% ggplot(aes(x=T,y=P)) + geom_point() + geom_smooth(formula = y ~ x,method = "lm")
p <- list(p1,p4)
cowplot::plot_grid(plotlist = p,nrow = 1,ncol = 2)
q1TQ <- left_join(q1T ,q1Q ,by=c('date','name')) %>% rename(T=value.x,Q=value.y)
p1 <- q1TQ %>% na.omit() %>% ggplot(aes(x=T,y=Q)) + geom_point() + geom_smooth(formula = y ~ x,method = "lm")
q2TQ <- left_join(q2T ,q2Q ,by=c('date','name')) %>% rename(T=value.x,Q=value.y)
p2 <- q2TQ %>% na.omit() %>% ggplot(aes(x=T,y=Q)) + geom_point() + geom_smooth(formula = y ~ x,method = "lm")
q3TQ <- left_join(q3T ,q3Q ,by=c('date','name')) %>% rename(T=value.x,Q=value.y)
p3 <- q3TQ %>% na.omit() %>% ggplot(aes(x=T,y=Q)) + geom_point() + geom_smooth(formula = y ~ x,method = "lm")
q4TQ <- left_join(q4T ,q4Q ,by=c('date','name')) %>% rename(T=value.x,Q=value.y)
p4 <- q4TQ %>% na.omit() %>% ggplot(aes(x=T,y=Q)) + geom_point() + geom_smooth(formula = y ~ x,method = "lm")
p <- list(p1,p4)
cowplot::plot_grid(plotlist = p,nrow = 1,ncol = 2)
q1PQ <- left_join(q1P,q1Q ,by=c('date','name')) %>% rename(P=value.x,Q=value.y)
p1 <- q1PQ %>% na.omit() %>% ggplot(aes(x=P,y=Q)) + geom_point() + geom_smooth(formula = y ~ x,method = "lm")
q2PQ <- left_join(q2P,q2Q ,by=c('date','name')) %>% rename(P=value.x,Q=value.y)
p2 <- q2PQ %>% na.omit() %>% ggplot(aes(x=P,y=Q)) + geom_point() + geom_smooth(formula = y ~ x,method = "lm")
q3PQ <- left_join(q3P,q3Q ,by=c('date','name')) %>% rename(P=value.x,Q=value.y)
p3 <- q3PQ %>% na.omit() %>% ggplot(aes(x=P,y=Q)) + geom_point() + geom_smooth(formula = y ~ x,method = "lm")
q4PQ <- left_join(q4P,q4Q ,by=c('date','name')) %>% rename(P=value.x,Q=value.y)
p4 <- q4PQ %>% na.omit() %>% ggplot(aes(x=P,y=Q)) + geom_point() + geom_smooth(formula = y ~ x,method = "lm")
p <- list(p1,p2,p3,p4)
cowplot::plot_grid(plotlist = p,nrow = 1,ncol = 4)
q1QQ <- q1Q %>% add_column(Q2=q2Q$value) %>%  rename(Q1=value)
p1 <- q1QQ %>% na.omit() %>% ggplot(aes(x=Q1,y=Q2)) + geom_point() + geom_smooth(formula = y ~ x,method = "loess")
q2QQ <- q2Q %>% add_column(Q3=q3Q$value) %>%  rename(Q2=value)
p2 <- q2QQ %>% na.omit() %>% ggplot(aes(x=Q2,y=Q3)) + geom_point() + geom_smooth(formula = y ~ x,method = "loess")
# q3QQ <- q3Q %>% add_column(Q4=q4Q$value) %>%  rename(Q3=value)
# p3 <- q3QQ %>% na.omit() %>% ggplot(aes(x=Q3,y=Q4)) + geom_point() + geom_smooth(formula = y ~ x,method = "loess")
p <- list(p1,p2)
cowplot::plot_grid(plotlist = p,nrow = 1,ncol = 2)
KoksuDischargeDerivation <- riversCentralAsia:::KoksuDischargeDerivation # load Data
KoksuDischarge_wide <- KoksuDischargeDerivation %>% pivot_wider(id_cols = 'date',values_from = 'data',names_from = "code")
KoksuDischarge_wide
# Adding Koksu discharge to the dataframe
KoksuDischarge_wide <- KoksuDischarge_wide %>% mutate(Koksu = Charvak - `16279`)
KoksuDischarge_wide
# and visualize
ggplot(KoksuDischarge_wide, aes(`16279`, Koksu)) +
geom_point() +
xlab(bquote('Discharge at Gauge 16279 Khudaydod in'~m^3/s)) +
ylab (bquote('Koksu river discharge in'~m^3/s))
lm <- lm(Koksu ~ 0 + `16279`,KoksuDischarge_wide)
summary(lm)
# Load data records
fPath = fPath <- './data/AmuDarya/Gunt'
fName = '/StationData/gunt_data_cleaned.Rds'
data <- read_rds(paste0(fPath,fName))
data
## MeteoStation locations and elevation
meteoStations <- # just put everything in a regular dataframe
tibble(StationName=c("Bulunkul","Khorog","Khorog","Javshangoz","Navobod"),
StationCode = c(38953, 38954, 17050, 38956, 38950),
lat   = c(37.70416667,37.50361111,37.50361111,37.39083333,37.59416667),
lon   = c(72.94583333,71.515,71.515,72.29583333,71.86555556),
utm.x = NA,
utm.y = NA,
masl  = c(3746, 2075, 2075,3438, 2566),
type = c("Meteo", "Meteo","Discharge Gauge","Meteo","Meteo"))
## convert lat / lon coordinates to UTM
cord.dec = SpatialPoints(cbind(meteoStations$lon, meteoStations$lat), proj4string=CRS("+proj=longlat"))
cord.UTM <- spTransform(cord.dec, CRS("+init=epsg:32642"))
cord.UTM.tbl <- cord.UTM %>% as_tibble()
meteoStations$utm.x <- cord.UTM.tbl$coords.x1
meteoStations$utm.y <- cord.UTM.tbl$coords.x2
meteoStations
q_17050_mon <- data %>% filter(type == "Q" & code == '17050' & resolution == 'mon')
q_17050_mon
q_17050_mon %>% plot_time_series(date,
data,
.smooth        = FALSE,
.interactive   = TRUE,
.title         = "",
.x_lab         = 'Year',
.y_lab         = 'Mean monthly Q [m3/s]',
.plotly_slider = TRUE)
q_17050_mon %>%
plot_seasonal_diagnostics(.date_var      = date,
.value         = data,
.title         = "",
.feature_set   = c("month.lbl"),
.interactive   = FALSE,
.x_lab         = "Year",
.y_lab         = "Mean monthly Q [m3/s]") +
scale_x_discrete(breaks=c("January", "February", "March", "April", "May",
"June", "July", "August", "September", "October",
"November", "December", "1", "2", "3", "4"),
labels=c("J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D","1", "2", "3", "4"))
q_17050_mon %>%
summarise_by_time(.date_var = date,
.by       = "month",
value     = mean(data)) %>%
tk_ts(frequency = 12) %>%
forecast::ggsubseriesplot(year.labels = FALSE) +
geom_smooth(method = "lm",color="red") +
xlab('Month') +
ylab('Mean monthly Q [m3/s]')
q_17050_mon %>%
summarise_by_time(.date_var = date,
.by       = "month",
value     = mean(data)) %>%
tk_ts(frequency = 12) %>%
forecast::ggsubseriesplot(year.labels = FALSE) +
geom_smooth(method = "lm",color="red") +
xlab('Month') +
ylab('Mean monthly Q [m3/s]')
q_17050_mon %>%
summarise_by_time(.date_var = date,
.by       = "month",
value     = mean(data)) %>%
tk_ts(frequency = 12) %>%
forecast::ggsubseriesplot(year.labels = FALSE) +
geom_smooth(method = "lm",color="red") +
xlab('Month') +
ylab('Mean monthly Q [m3/s]')
# Computation of hydrological year discharge and plotting
qHYY <- data %>% convert2HYY(.,'17050','Q')
qHYY %>%   pivot_longer(-hyYear) %>%
plot_time_series(hyYear,value,name,
.title = '',
.x_lab = 'Year',
.y_lab = 'Mean monthly Q [m3/s]',
.interactive = FALSE,
.smooth=FALSE)
plotNormDevHYY(qHYY,'Q','Khorog-Gunt 17050')
mean10yearQ <- qHYY %>% filter(hyYear < '2020-01-01') %>%
pivot_longer(-hyYear) %>% group_by(name) %>% summarise_by_time(hyYear,value,.by="10 year",mean10yearQ = mean(value,na.rm=TRUE)) %>% dplyr::select(-value) %>% distinct() %>% ungroup()
mean10yearQ %>% pivot_wider(names_from = name,values_from = mean10yearQ)
mean10yearQ %>%  plot_time_series(hyYear,mean10yearQ,name,
.smooth = FALSE,
.x_lab  = "Year",
.y_lab  = "Q [m^3/s]",
.title  = "10-year mean hydrological year discharge of Gunt River")
mean10yearQ <- qHYY %>% filter(hyYear < '2020-01-01') %>%
pivot_longer(-hyYear) %>% group_by(name) %>% summarise_by_time(hyYear,value,.by="10 year",mean10yearQ = mean(value,na.rm=TRUE)) %>% dplyr::select(-value) %>% distinct() %>% ungroup()
mean10yearQ %>% pivot_wider(names_from = name,values_from = mean10yearQ)
mean10yearQ %>%  plot_time_series(hyYear,mean10yearQ,name,
.smooth = FALSE,
.x_lab  = "Year",
.y_lab  = "Q [m^3/s]",
.title  = "")
# Extracting mean station data from the four stations.
Tmean_38954 <- data %>% filter(code=="38954" & type =='mean(T)') %>% filter(date>='1939-01-01') %>% dplyr::select(date,data) %>% rename(Tmean_38954=data)
Tmean_38950 <- data %>% filter(code=="38950" & type =='mean(T)') %>% filter(date>='1939-01-01') %>% dplyr::select(date,data) %>% rename(Tmean_38950=data)
Tmean_38953 <- data %>% filter(code=="38953" & type =='mean(T)') %>% filter(date>='1939-01-01') %>% dplyr::select(date,data) %>% rename(Tmean_38953=data)
Tmean_38956 <- data %>% filter(code=="38956" & type =='mean(T)') %>% filter(date>='1939-01-01') %>% dplyr::select(date,data) %>% rename(Tmean_38956=data)
# Assembling the data.
T <- full_join(Tmean_38950,Tmean_38953,by="date")
T <- full_join(T,Tmean_38954,by="date")
T <- full_join(T,Tmean_38956,by="date")
# Plotting the dataframe
T %>% pivot_longer(-date) %>%
filter(date>='1940-01-01') %>%
plot_time_series(date,
value,
name,
.smooth = FALSE,
.x_lab = 'Year',
.y_lab = 'Mean monthly T [deg. C]',
.title = "Mean Monthly Temperature Climatology in Gunt River Basin",
.interactive = TRUE)
# add a month identifier
T <- T %>% mutate(mon = month(date))
data
data$type %>% unique()
# Station Khorog 38954
meanTHYY_38954 <- data %>% convert2HYY(38954,'mean(T)') %>% filter(hyYear >= "1900-10-01")
meanTHYY_38954 %>% plotNormDevHYY(.,'mean(T)','Khorog 38954')
# Station Khorog 38954
meanTHYY_38954 <- data %>% convert2HYY(38954,'absmin(T)') %>% filter(hyYear >= "1900-10-01")
# Station Khorog 38954
meanTHYY_38954 <- data %>% convert2HYY(38954,'absmin(T)') %>% filter(hyYear >= "1900-10-01")
# Station Khorog 38954
meanTHYY_38954 <- data %>% convert2HYY(38954,'absmin(T)') %>% filter(hyYear >= "1900-10-01")
# Station Khorog 38954
meanTHYY_38954 <- data %>% convert2HYY(38954,'meanmin(T)') %>% filter(hyYear >= "1900-10-01")
?convert2HYY
# Station Khorog 38954
meanTHYY_38954 <- data %>% convert2HYY('38954','meanmin(T)') %>% filter(hyYear >= "1900-10-01")
# Station Khorog 38954
meanTHYY_38954 <- data %>% convert2HYY(38954,'mean(T)') %>% filter(hyYear >= "1900-10-01")
meanTHYY_38954 %>% plotNormDevHYY(.,'absmin(T)','Khorog 38954')
meanTHYY_38954
# Station Khorog 38954
meanTHYY_38954 <- data %>% convert2HYY(38954,'mean(T)') %>% filter(hyYear >= "1900-10-01")
meanTHYY_38954 %>% plotNormDevHYY(.,'absmin(T)','Khorog 38954')
# Station Khorog 38954
meanTHYY_38954 <- data %>% convert2HYY(38954,'mean(T)') %>% filter(hyYear >= "1900-10-01")
meanTHYY_38954 %>% plotNormDevHYY(.,'mean(T)','Khorog 38954')
# Station Khorog 38954
meanTHYY_38954 <- data %>% convert2HYY(38954,'mean(T)') %>% filter(hyYear >= "1900-10-01")
meanTHYY_38954 %>% plotNormDevHYY(.,'mean(T)','Khorog 38954')
knitr::include_graphics('_bookdown_files/Chap6-GeoHydroData-Figures/qgisVersion')
```{r qgis-open-qgis-project, echo=FALSE, out.width="100%", fig.align="center", fig.cap="Tutorial project open in QGIS 3.10."}
# Tidy data wrangling
library(tidyverse)
library(here)
library(timetk)
library(tidymodels)
library(lubridate)
library(timetk)
# ggplot add-on
devtools::install_github("eliocamp/ggnewscale")
library(ggnewscale)
library(ggpubr)
# Our own package for load and processing local data
library('riversCentralAsia')
# Spatial data processing
library(ncdf4)
library(raster)
library(rgdal)
library(sf)
library(smoothr)
library(units)
```{r ChirchikRiverOverview, echo = FALSE, fig.cap = 'Overview over the Chirchik river basin with tributaries and the location of the main gauging stations in the zone of runoff formation and near the confluence with the Syr Darya.'}
knitr::include_graphics('_bookdown_files/Chap3-ChirchikRB-Figures/ChirchikRiverBasin_Annotated_lr.jpg')
data <- ChirchikRiverBasin
data %>%
filter(type=='Q') %>%
group_by(type,code,station,resolution) %>%
plot_time_series(date,
data,
.facet_ncol      = 2,
.interactive     = FALSE,
.smooth          = FALSE,
.title           = '')
data %>% filter(code=='16262') %>% plot_time_series(date,data,
.interactive = TRUE,
.smooth = FALSE,
.title = "",
.x_lab = 'date',
.y_lab = 'Discharge in cubic meters per second',
.plotly_slider = TRUE)
data %>% filter(code=='16275') %>% plot_time_series(date,data,
.interactive = TRUE,
.smooth = FALSE,
.title = "",
.x_lab = 'date',
.y_lab = 'Discharge in cubic meters per second',
.plotly_slider = TRUE)
q16262 <- data %>% filter(code=='16262') %>% dplyr::select(date,data) %>% rename(Q16262 = data) # Gazalkent
q16275 <- data %>% filter(code=='16275') %>% dplyr::select(date,data) %>% rename(Q16275 = data) # Chinaz
q_wide <- left_join(q16262,q16275,by = 'date') %>%
mutate(diffUD = Q16262 - Q16275)
q_wide_annual <- q_wide %>%
summarize_by_time(.date_var = date,
.by="year",
Q16262 = sum(Q16262)*3600*24*10/10^9,
Q16275 = sum(Q16275)*3600*24*10/10^9,
flowDifference = sum(diffUD)*3600*24*10/10^9)
q_long <- q_wide_annual %>% pivot_longer(-date)
p1 <- q_long %>% plot_time_series(date,
value,
.color_var = name,
.interactive = FALSE,
.title = "",
.x_lab = 'date',
.y_lab = 'Discharge in cubic kilometers per year',
.smooth = FALSE)
p1 + theme(legend.position = c(0.1, 0.15))
data_stats <- data %>% filter(type == 'Q') %>%
dplyr::select(date,data,code,station) %>% group_by(code) %>%
summarise(mean = mean(data,na.rm=TRUE) %>% round(digits = 1),
min = min(data,na.rm=TRUE) %>% round(digits = 1),
max = max(data,na.rm=TRUE) %>% round(digits = 1),
sd = sd(data,na.rm=TRUE) %>% round(digits = 1),.groups = 'keep')
data_stats %>% dplyr::select(-code)
# Nice tables - try kable()
knitr::kable(data_stats, caption = "Key statistics of Chirchik basin rivers.")
data %>% filter(type=='Q', code!="16275",code!="16262",code!="16924",code!="16298",code!="16300") %>%
dplyr::select(date,data,code,river) %>%
group_by(code, river) %>%
plot_seasonal_diagnostics(.date_var = date,
.value = data,
.interactive = FALSE,
.feature_set = c("week","month.lbl"),
.title = "")
data %>% filter(type=='Q', code!="16275",code!="16262",code!="16924",code!="16279",code!="16290") %>%
dplyr::select(date,data,code,river) %>%
group_by(code, river) %>%
plot_seasonal_diagnostics(.date_var = date,
.value = data,
.interactive = FALSE,
.feature_set = c("week","month.lbl"),
.title = "")
knitr::include_graphics('_bookdown_files/Chap3-ChirchikRB-Figures/hypsometric_Curves.jpg')
data %>% filter(code=="16924") %>%
dplyr::select(date,data,code,river)  %>%
summarise_by_time(.date_var = date, .by="month",value=mean(data)) %>%
plot_time_series(date,value)
data %>% filter(code=="16924") %>%
dplyr::select(date,data,code,river)  %>%
summarise_by_time(.date_var = date, .by="month",value=mean(data)) %>%
tk_ts(frequency = 12) %>%
forecast::ggsubseriesplot(year.labels = FALSE) +
geom_smooth(method = "lm",color="red") +
xlab('month') +
ylab('m^3/month')
quarterQ_mean <- data %>% filter(type == "Q" & code=="16924") %>%
dplyr::select(date,data,code,river)  %>%
summarise_by_time(.date_var = date,.by = "quarter",value = mean(data,na.rm = TRUE)) %>%
rename(mean = value) #%>% na.omit()
quarterQ_max <- data %>% filter(type == "Q" & code=="16924") %>%
dplyr::select(date,data,code,river)  %>%
summarise_by_time(.date_var = date, .by = "quarter", value = max(data,na.rm = TRUE)) %>%
rename(max = value) #%>% na.omit()
quarterQ_min <- data %>% filter(type == "Q" & code=="16924") %>%
dplyr::select(date,data,code,river)  %>%
summarise_by_time(.date_var = date, .by = "quarter", value = min(data,na.rm = TRUE)) %>%
rename(min = value) #%>% na.omit()
quarterQ <- left_join(quarterQ_mean,quarterQ_max,by='date')
quarterQ <- left_join(quarterQ,quarterQ_min,by='date')
quarterQ <- bind_cols(quarterQ,quarterQ$date %>% tsibble::yearquarter()) %>% rename(quarter='...5')
quarterQ$quarter <- quarterQ$quarter %>% format(.,format = "Q%q")
q1Q <- quarterQ %>% filter(quarter=='Q1') %>% dplyr::select(-quarter) %>% na.omit() %>%pivot_longer(-date)
q2Q <- quarterQ %>% filter(quarter=='Q2') %>% dplyr::select(-quarter) %>% na.omit() %>%pivot_longer(-date)
q3Q <- quarterQ %>% filter(quarter=='Q3') %>% dplyr::select(-quarter) %>% na.omit() %>%pivot_longer(-date)
q4Q <- quarterQ %>% filter(quarter=='Q4') %>% dplyr::select(-quarter) %>% na.omit() %>%pivot_longer(-date)
pQ1 <- q1Q  %>% na.omit() %>% #group_by(name) %>%
plot_time_series(date,value,name,
.smooth = TRUE, .smooth_degree = 1, .smooth_period = 'auto',
.title = "", .interactive = F, .facet_ncol = 1,
.x_lab = "year", .y_lab = "Q", .legend_show = T
) + theme(legend.position = c(0.1, 0.8))
pQ2 <- q2Q  %>% na.omit() %>%#group_by(name) %>%
plot_time_series(date,value,name,
.smooth = TRUE, .smooth_degree = 1, .smooth_period = 'auto',
.title = "", .interactive = F, .facet_ncol = 1,
.x_lab = "year",.y_lab = "Q", .legend_show = F
) #+ theme(legend.position = c(0.1, 0.8))
pQ3 <- q3Q  %>% na.omit() %>%#group_by(name) %>%
plot_time_series(date,value,name,
.smooth = TRUE, .smooth_degree = 1, .smooth_period = 'auto',
.title = "", .interactive = F, .facet_ncol = 1,
.x_lab = "year",.y_lab = "Q",.legend_show = F
) #+ theme(legend.position = c(0.1, 0.8))
pQ4 <- q4Q  %>% na.omit() %>% #group_by(name) %>%
plot_time_series(date,value,name,
.smooth = TRUE, .smooth_degree = 1, .smooth_period = 'auto',
.title = "", .interactive = F, .facet_ncol = 1,
.x_lab = "year",.y_lab = "Q",.legend_show = F
) #+ theme(legend.position = c(0.1, 0.8))
plotM <- list(pQ1,pQ2,pQ3,pQ4)
cowplot::plot_grid(plotlist = plotM, nrow = 1, ncol = 4)
warnings()
unlink('05_CASE_STUDIES_cache', recursive = TRUE)
